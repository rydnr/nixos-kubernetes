#+title: Notes

* Macros

#+begin_src elisp
(defun kebab-to-camel (str)
  "Convert a kebab-case string STR to camelCase."
  (let* ((words (split-string str "-"))
         (camel-case (concat (car words)
                             (mapconcat 'capitalize (cdr words) ""))))
    camel-case))

(defun camel-to-kebab (str)
  "Convert a camelCase string STR to kebab-case."
  (let ((case-fold-search nil))
    (downcase (replace-regexp-in-string "\\([a-z0-9]\\)\\([A-Z]\\)" "\\1-\\2" str))))

(defun replace-kebab-with-camel (search-str)
  "Search for SEARCH-STR, go to the start of the line, press TAB,
  and replace the region between the cursor and the next whitespace with camelCase."
  (interactive "sEnter the search string: ")
  (when (search-forward search-str nil t)
    (beginning-of-line)
    (indent-for-tab-command)
    (let* ((start (point))
           (end (progn (skip-chars-forward "^ \t\n") (point)))
           (kebab (buffer-substring-no-properties start end))
           (camel (kebab-to-camel kebab)))
      (delete-region start end)
      (insert camel))
    (forward-line 1)))

(defun replace-camel-with-kebab (search-str)
  "Search for SEARCH-STR, go to the start of the line, press TAB,
  and replace the region between the cursor and the next whitespace with kebab-case."
  (interactive "sEnter the search string: ")
  (when (search-forward search-str nil t)
    (beginning-of-line)
    (indent-for-tab-command)
    (let* ((start (point))
           (end (progn (skip-chars-forward "^ \t\n") (point)))
           (camel (buffer-substring-no-properties start end))
           (kebab (camel-to-kebab camel)))
      (delete-region start end)
      (insert kebab))
    (forward-line 1)))

(defun replace-camel-with-kebab-in-line (search-str)
  "Replace all occurrences of SEARCH-STR with kebab-case in the current line."
  (interactive "sEnter the search string: ")
  (save-excursion
    (beginning-of-line)
    (let ((line-start (point)))
      (forward-line 1)
      (let ((line-end (progn (end-of-line) (point))))
        (goto-char line-start)
        (while (re-search-forward search-str line-end t)
          (replace-match (camel-to-kebab search-str))))))
  (forward-line 2))

(defmacro kebab-to-camel-macro (search-str)
  "Macro to call the replace-kebab-with-camel function with SEARCH-STR."
  `(replace-kebab-with-camel ,search-str))

(defmacro camel-to-kebab-macro (search-str)
  "Macro to call the replace-camel-with-kebab function with SEARCH-STR."
  `(replace-camel-with-kebab ,search-str))
#+end_src

* kube-apiserver

#+begin_src nix :tangle kube-apiserver.nix
{
  config,
  pkgs,
  lib,
  ...
}:

with lib;

let
  cfg = config.services.kube-apiserver;
  boolToString = b: if b then "true" else "false";
  oidc-required-claim-items = if cfg.oidc-required-claim != null then map (item: "--oidc-required-claim ${item}") cfg.oidc-required-claim else [];
in
{
  options.services.kube-apiserver = {
    enable = mkOption {
      type = types.bool;
      default = false;
      description = "The Kubernetes API server validates and configures data for the api objects which include pods, services, replicationcontrollers, and others. The API Server services REST operations and provides the frontend to the cluster's shared state through which all other components interact..";
    };

    # Generic flags
    advertise-address = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The IP address on which to advertise the apiserver to members of the cluster. This address must be reachable by the rest of the cluster. If blank, the --bind-address will be used. If --bind-address is unspecified, the host's default interface will be used.";
    };
    cloud-provider-gce-l7lb-src-cidrs = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "CIDRs opened in GCE firewall for L7 LB traffic proxy & health checks (default 130.211.0.0/22,35.191.0.0/16)";
    };
    cors-allowed-origins = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of allowed origins for CORS, comma separated. An allowed origin can be a regular expression to support subdomain matching. If this list is empty CORS will not be enabled. Please ensure each expression matches the entire hostname by anchoring to the start with '^' or including the '//' prefix, and by anchoring to the end with '$' or including the ':' port separator suffix. Examples of valid expressions are '//example\.com(:|$)' and '^https://example\.com(:|$)'";
    };
    default-not-ready-toleration-seconds = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Indicates the tolerationSeconds of the toleration for notReady:NoExecute that is added by default to every pod that does not already have such a toleration. (default 300)";
    };
    default-unreachable-toleration-seconds = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Indicates the tolerationSeconds of the toleration for unreachable:NoExecute that is added by default to every pod that does not already have such a toleration. (default 300)";
    };
    enable-priority-and-fairness = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true and the APIPriorityAndFairness feature gate is enabled, replace the max-in-flight handler with an enhanced one that queues and dispatches with priority and fairness (default true)";
    };
    external-hostname = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The hostname to use when generating externalized URLs for this master (e.g. Swagger API Docs or OpenID Discovery).";
    };
    feature-gates = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "" "
A set of key=value pairs that describe feature gates for alpha/experimental features. Options are:
  APIResponseCompression=true|false (BETA - default=true)
  APIServerIdentity=true|false (BETA - default=true)
  APIServerTracing=true|false (BETA - default=true)
  APIServingWithRoutine=true|false (BETA - default=true)
  AllAlpha=true|false (ALPHA - default=false)
  AllBeta=true|false (BETA - default=false)
  AnyVolumeDataSource=true|false (BETA - default=true)
  AppArmor=true|false (BETA - default=true)
  AppArmorFields=true|false (BETA - default=true)
  CPUManagerPolicyAlphaOptions=true|false (ALPHA - default=false)
  CPUManagerPolicyBetaOptions=true|false (BETA - default=true)
  CPUManagerPolicyOptions=true|false (BETA - default=true)
  CRDValidationRatcheting=true|false (BETA - default=true)
  CSIMigrationPortworx=true|false (BETA - default=false)
  CSIVolumeHealth=true|false (ALPHA - default=false)
  CloudControllerManagerWebhook=true|false (ALPHA - default=false)
  ClusterTrustBundle=true|false (ALPHA - default=false)
  ClusterTrustBundleProjection=true|false (ALPHA - default=false)
  ComponentSLIs=true|false (BETA - default=true)
  ConsistentListFromCache=true|false (ALPHA - default=false)
  ContainerCheckpoint=true|false (BETA - default=true)
  ContextualLogging=true|false (BETA - default=true)
  CronJobsScheduledAnnotation=true|false (BETA - default=true)
  CrossNamespaceVolumeDataSource=true|false (ALPHA - default=false)
  CustomCPUCFSQuotaPeriod=true|false (ALPHA - default=false)
  CustomResourceFieldSelectors=true|false (ALPHA - default=false)
  DevicePluginCDIDevices=true|false (BETA - default=true)
  DisableCloudProviders=true|false (BETA - default=true)
  DisableKubeletCloudCredentialProviders=true|false (BETA - default=true)
  DisableNodeKubeProxyVersion=true|false (ALPHA - default=false)
  DynamicResourceAllocation=true|false (ALPHA - default=false)
  ElasticIndexedJob=true|false (BETA - default=true)
  EventedPLEG=true|false (ALPHA - default=false)
  GracefulNodeShutdown=true|false (BETA - default=true)
  GracefulNodeShutdownBasedOnPodPriority=true|false (BETA - default=true)
  HPAScaleToZero=true|false (ALPHA - default=false)
  HonorPVReclaimPolicy=true|false (ALPHA - default=false)
  ImageMaximumGCAge=true|false (BETA - default=true)
  InPlacePodVerticalScaling=true|false (ALPHA - default=false)
  InTreePluginAWSUnregister=true|false (ALPHA - default=false)
  InTreePluginAzureDiskUnregister=true|false (ALPHA - default=false)
  InTreePluginAzureFileUnregister=true|false (ALPHA - default=false)
  InTreePluginGCEUnregister=true|false (ALPHA - default=false)
  InTreePluginOpenStackUnregister=true|false (ALPHA - default=false)
  InTreePluginPortworxUnregister=true|false (ALPHA - default=false)
  InTreePluginvSphereUnregister=true|false (ALPHA - default=false)
  InformerResourceVersion=true|false (ALPHA - default=false)
  JobBackoffLimitPerIndex=true|false (BETA - default=true)
  JobManagedBy=true|false (ALPHA - default=false)
  JobPodFailurePolicy=true|false (BETA - default=true)
  JobPodReplacementPolicy=true|false (BETA - default=true)
  JobSuccessPolicy=true|false (ALPHA - default=false)
  KubeProxyDrainingTerminatingNodes=true|false (BETA - default=true)
  KubeletCgroupDriverFromCRI=true|false (ALPHA - default=false)
  KubeletInUserNamespace=true|false (ALPHA - default=false)
  KubeletPodResourcesDynamicResources=true|false (ALPHA - default=false)
  KubeletPodResourcesGet=true|false (ALPHA - default=false)
  KubeletSeparateDiskGC=true|false (ALPHA - default=false)
  KubeletTracing=true|false (BETA - default=true)
  LoadBalancerIPMode=true|false (BETA - default=true)
  LocalStorageCapacityIsolationFSQuotaMonitoring=true|false (ALPHA - default=false)
  LogarithmicScaleDown=true|false (BETA - default=true)
  LoggingAlphaOptions=true|false (ALPHA - default=false)
  LoggingBetaOptions=true|false (BETA - default=true)
  MatchLabelKeysInPodAffinity=true|false (ALPHA - default=false)
  MatchLabelKeysInPodTopologySpread=true|false (BETA - default=true)
  MaxUnavailableStatefulSet=true|false (ALPHA - default=false)
  MemoryManager=true|false (BETA - default=true)
  MemoryQoS=true|false (ALPHA - default=false)
  MultiCIDRServiceAllocator=true|false (ALPHA - default=false)
  MutatingAdmissionPolicy=true|false (ALPHA - default=false)
  NFTablesProxyMode=true|false (ALPHA - default=false)
  NodeInclusionPolicyInPodTopologySpread=true|false (BETA - default=true)
  NodeLogQuery=true|false (BETA - default=false)
  NodeSwap=true|false (BETA - default=true)
  OpenAPIEnums=true|false (BETA - default=true)
  PDBUnhealthyPodEvictionPolicy=true|false (BETA - default=true)
  PersistentVolumeLastPhaseTransitionTime=true|false (BETA - default=true)
  PodAndContainerStatsFromCRI=true|false (ALPHA - default=false)
  PodDeletionCost=true|false (BETA - default=true)
  PodDisruptionConditions=true|false (BETA - default=true)
  PodIndexLabel=true|false (BETA - default=true)
  PodLifecycleSleepAction=true|false (BETA - default=true)
  PodReadyToStartContainersCondition=true|false (BETA - default=true)
  PortForwardWebsockets=true|false (ALPHA - default=false)
  ProcMountType=true|false (ALPHA - default=false)
  QOSReserved=true|false (ALPHA - default=false)
  RecoverVolumeExpansionFailure=true|false (ALPHA - default=false)
  RecursiveReadOnlyMounts=true|false (ALPHA - default=false)
  RelaxedEnvironmentVariableValidation=true|false (ALPHA - default=false)
  RetryGenerateName=true|false (ALPHA - default=false)
  RotateKubeletServerCertificate=true|false (BETA - default=true)
  RuntimeClassInImageCriApi=true|false (ALPHA - default=false)
  SELinuxMount=true|false (ALPHA - default=false)
  SELinuxMountReadWriteOncePod=true|false (BETA - default=true)
  SchedulerQueueingHints=true|false (BETA - default=false)
  SeparateCacheWatchRPC=true|false (BETA - default=true)
  SeparateTaintEvictionController=true|false (BETA - default=true)
  ServiceAccountTokenJTI=true|false (BETA - default=true)
  ServiceAccountTokenNodeBinding=true|false (ALPHA - default=false)
  ServiceAccountTokenNodeBindingValidation=true|false (BETA - default=true)
  ServiceAccountTokenPodNodeInfo=true|false (BETA - default=true)
  ServiceTrafficDistribution=true|false (ALPHA - default=false)
  SidecarContainers=true|false (BETA - default=true)
  SizeMemoryBackedVolumes=true|false (BETA - default=true)
  StatefulSetAutoDeletePVC=true|false (BETA - default=true)
  StatefulSetStartOrdinal=true|false (BETA - default=true)
  StorageNamespaceIndex=true|false (BETA - default=true)
  StorageVersionAPI=true|false (ALPHA - default=false)
  StorageVersionHash=true|false (BETA - default=true)
  StorageVersionMigrator=true|false (ALPHA - default=false)
  StructuredAuthenticationConfiguration=true|false (BETA - default=true)
  StructuredAuthorizationConfiguration=true|false (BETA - default=true)
  TopologyAwareHints=true|false (BETA - default=true)
  TopologyManagerPolicyAlphaOptions=true|false (ALPHA - default=false)
  TopologyManagerPolicyBetaOptions=true|false (BETA - default=true)
  TopologyManagerPolicyOptions=true|false (BETA - default=true)
  TranslateStreamCloseWebsocketRequests=true|false (BETA - default=true)
  UnauthenticatedHTTP2DOSMitigation=true|false (BETA - default=true)
  UnknownVersionInteroperabilityProxy=true|false (ALPHA - default=false)
  UserNamespacesPodSecurityStandards=true|false (ALPHA - default=false)
  UserNamespacesSupport=true|false (BETA - default=false)
  VolumeAttributesClass=true|false (ALPHA - default=false)
  VolumeCapacityPriority=true|false (ALPHA - default=false)
  WatchFromStorageWithoutResourceVersion=true|false (BETA - default=false)
  WatchList=true|false (ALPHA - default=false)
  WatchListClient=true|false (BETA - default=false)
  WinDSR=true|false (ALPHA - default=false)
  WinOverlay=true|false (BETA - default=true)
  WindowsHostNetwork=true|false (ALPHA - default=true)
" "";
    };
    goaway-chance = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "To prevent HTTP/2 clients from getting stuck on a single apiserver, randomly close a connection (GOAWAY). The client's other in-flight requests won't be affected, and the client will reconnect, likely landing on a different apiserver after going through the load balancer again. This argument sets the fraction of requests that will be sent a GOAWAY. Clusters with single apiservers, or which don't use a load balancer, should NOT enable this. Min is 0 (off), Max is .02 (1/50 requests); .001 (1/1000) is a recommended starting point.";
    };
    livez-grace-period = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "This option represents the maximum amount of time it should take for apiserver to complete its startup sequence and become live. From apiserver's start time to when this amount of time has elapsed, /livez will assume that unfinished post-start hooks will complete successfully and therefore return true.";
    };
    max-mutating-requests-inflight = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "This and --max-requests-inflight are summed to determine the server's total concurrency limit (which must be positive) if --enable-priority-and-fairness is true. Otherwise, this flag limits the maximum number of mutating requests in flight, or a zero value disables the limit completely. (default 200)";
    };
    max-requests-inflight = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "This and --max-mutating-requests-inflight are summed to determine the server's total concurrency limit (which must be positive) if --enable-priority-and-fairness is true. Otherwise, this flag limits the maximum number of non-mutating requests in flight, or a zero value disables the limit completely. (default 400)";
    };
    min-request-timeout = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "An optional field indicating the minimum number of seconds a handler must keep a request open before timing it out. Currently only honored by the watch request handler, which picks a randomized value above this number as the connection timeout, to spread out load. (default 1800)";
    };
    request-timeout = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "An optional field indicating the duration a handler must keep a request open before timing it out. This is the default request timeout for requests but may be overridden by flags such as --min-request-timeout for specific types of requests. (default 1m0s)";
    };
    shutdown-delay-duration = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Time to delay the termination. During that time the server keeps serving requests normally. The endpoints /healthz and /livez will return success, but /readyz immediately returns failure. Graceful termination starts after this delay has elapsed. This can be used to allow load balancer to stop sending traffic to this server.";
    };
    shutdown-send-retry-after = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true the HTTP Server will continue listening until all non long running request(s) in flight have been drained, during this window all incoming requests will be rejected with a status code 429 and a 'Retry-After' response header, in addition 'Connection: close' response header is set in order to tear down the TCP connection when idle.";
    };
    shutdown-watch-termination-grace-period = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "This option, if set, represents the maximum amount of grace period the apiserver will wait for active watch request(s) to drain during the graceful server shutdown window.";
    };
    strict-transport-security-directives = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of directives for HSTS, comma separated. If this list is empty, then HSTS directives will not be added. Example: ['max-age=31536000' 'includeSubDomains' 'preload']";
    };

    # Etcd flags
    delete-collection-workers = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Number of workers spawned for DeleteCollection call. These are used to speed up namespace cleanup. (default 1)";
    };
    enable-garbage-collector = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enables the generic garbage collector. MUST be synced with the corresponding flag of the kube-controller-manager. (default true)";
    };
    encryption-provider-config = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The file containing configuration for encryption providers to be used for storing secrets in etcd";
    };
    encryption-provider-config-automatic-reload = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Determines if the file set by --encryption-provider-config should be automatically reloaded if the disk contents change. Setting this to true disables the ability to uniquely identify distinct KMS plugins via the API server healthz endpoints.";
    };
    etcd-cafile = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "SSL Certificate Authority file used to secure etcd communication.";
    };
    etcd-certfile = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "SSL certification file used to secure etcd communication.";
    };
    etcd-compaction-interval = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The interval of compaction requests. If 0, the compaction request from apiserver is disabled. (default 5m0s)";
    };
    etcd-count-metric-poll-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Frequency of polling etcd for number of resources per type. 0 disables the metric collection. (default 1m0s)";
    };
    etcd-db-metric-poll-interval = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The interval of requests to poll etcd and update metric. 0 disables the metric collection (default 30s)";
    };
    etcd-healthcheck-timeout = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The timeout to use when checking etcd health. (default 2s)";
    };
    etcd-keyfile = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "SSL key file used to secure etcd communication.";
    };
    etcd-prefix = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The prefix to prepend to all resource paths in etcd. (default " /registry ")";
    };
    etcd-readycheck-timeout = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The timeout to use when checking etcd readiness (default 2s)";
    };
    etcd-servers = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of etcd servers to connect with (scheme://ip:port), comma separated.";
    };
    etcd-servers-overrides = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "Per-resource etcd servers overrides, comma separated. The individual override format: group/resource#servers, where servers are URLs, semicolon separated. Note that this applies only to resources compiled into this server binary. ";
    };
    lease-reuse-duration-seconds = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The time in seconds that each lease is reused. A lower value could avoid large number of objects reusing the same lease. Notice that a too small value may cause performance problems at storage layer. (default 60)";
    };
    storage-backend = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The storage backend for persistence. Options: 'etcd3' (default).";
    };
    storage-media-type = mkOption {
      type = types.nullOr (types.enum [
        "application/json"
        "application/yaml"
        "application/vnd.kubernetes.protobuf"
      ]);
      default = null;
      description = "The media type to use to store objects in storage. Some resources or storage backends may only support a specific media type and will ignore this setting. Supported media types: [application/json, application/yaml, application/vnd.kubernetes.protobuf] (default 'application/vnd.kubernetes.protobuf ')";
    };
    watch-cache = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enable watch caching in the apiserver (default true)";
    };
    watch-cache-sizes = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "Watch cache size settings for some resources (pods, nodes, etc.), comma separated. The individual setting format: resource[.group]#size, where resource is lowercase plural (no version), group is omitted for resources of apiVersion v1 (the legacy core API) and included for others, and size is a number. This option is only meaningful for resources built into the apiserver, not ones defined by CRDs or aggregated from external servers, and is only consulted if the watch-cache is enabled. The only meaningful size setting to supply here is zero, which means to disable watch caching for the associated resource; all non-zero values are equivalent and mean to not disable watch caching for that resource";
    };
    # Secure serving flags
    bind-address = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The IP address on which to listen for the --secure-port port. The associated interface(s) must be reachable by the rest of the cluster, and by CLI/web clients. If blank or an unspecified address (0.0.0.0 or ::), all interfaces and IP address families will be used. (default 0.0.0.0)";
    };
    cert-dir = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The directory where the TLS certs are located. If --tls-cert-file and --tls-private-key-file are provided, this flag will be ignored. (default /var/run/kubernetes)";
    };
    http2-max-streams-per-connection = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The limit that the server gives to clients for the maximum number of streams in an HTTP/2 connection. Zero means to use golang's default.";
    };
    permit-address-sharing = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, SO_REUSEADDR will be used when binding the port. This allows binding to wildcard IPs like 0.0.0.0 and specific IPs in parallel, and it avoids waiting for the kernel to release sockets in TIME_WAIT state. [default=false]";
    };
    permit-port-sharing = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, SO_REUSEPORT will be used when binding the port, which allows more than one instance to bind on the same address and port. [default=false]";
    };
    secure-port = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The port on which to serve HTTPS with authentication and authorization. It cannot be switched off with 0. (default 6443)";
    };
    tls-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File containing the default x509 Certificate for HTTPS. (CA cert, if any, concatenated after server cert). If HTTPS serving is enabled, and --tls-cert-file and --tls-private-key-file are not provided, a self-signed certificate and key are generated for the public address and saved to the directory specified by --cert-dir.";
    };
    tls-cipher-suites = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "" "
Comma-separated list of cipher suites for the server. If omitted, the default Go cipher suites will be used. Preferred values:
Preferred values: TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256.
Insecure values: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_RC4_128_SHA, TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_RC4_128_SHA, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_RC4_128_SHA.
" "";
    };
    tls-min-version = mkOption {
      type = types.nullOr (types.enum [ "VersionTLS10" "VersionTLS11" "VersionTLS12" "VersionTLS13" ]);
      default = null;
      description = "Minimum TLS version supported. Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13";
    };
    tls-private-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File containing the default x509 private key matching --tls-cert-file.";
    };
    tls-sni-cert-key = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "A pair of x509 certificate and private key file paths, optionally suffixed with a list of domain patterns which are fully qualified domain names, possibly with prefixed wildcard segments. The domain patterns also allow IP addresses, but IPs should only be used if the apiserver has visibility to the IP address requested by a client. If no domain patterns are provided, the names of the certificate are extracted. Non-wildcard matches trump over wildcard matches, explicit domain patterns trump over extracted names. For multiple key/certificate pairs, use the --tls-sni-cert-key multiple times. Examples: 'example.crt,example.key' or 'foo.crt,foo.key:*.foo.com,foo.com'. (default [])";
    };

    # audit flags
    audit-log-batch-buffer-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The size of the buffer to store events before batching and writing. Only used in batch mode. (default 10000)";
    };
    audit-log-batch-max-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The maximum size of a batch. Only used in batch mode. (default 1)";
    };
    audit-log-batch-max-wait = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The amount of time to wait before force writing the batch that hadn't reached the max size. Only used in batch mode.";
    };
    audit-log-batch-throttle-burst = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Maximum number of requests sent at the same moment if ThrottleQPS was not utilized before. Only used in batch mode.";
    };
    audit-log-batch-throttle-enable = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Whether batching throttling is enabled. Only used in batch mode.";
    };
    audit-log-batch-throttle-qps = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "Maximum average number of batches per second. Only used in batch mode.";
    };
    audit-log-compress = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If set, the rotated log files will be compressed using gzip.";
    };
    audit-log-format = mkOption {
      type = types.nullOr (types.enum [ "legacy" "json" ]);
      default = null;
      description = "Format of saved audits. 'legacy' indicates 1-line text format for each event. 'json' indicates structured json format. Known formats are legacy,json. (default 'json')";
    };
    audit-log-maxage = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The maximum number of days to retain old audit log files based on the timestamp encoded in their filename.";
    };
    audit-log-maxbackup = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The maximum number of old audit log files to retain. Setting a value of 0 will mean there's no restriction on the number of files.";
    };
    audit-log-maxsize = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The maximum size in megabytes of the audit log file before it gets rotated.";
    };
    audit-log-mode = mkOption {
      type = types.nullOr (types.enum [ "batch" "blocking" "blocking-strict" ]);
      default = null;
      description = "Strategy for sending audit events. Blocking indicates sending events should block server responses. Batch causes the backend to buffer and write events asynchronously. Known modes are batch,blocking,blocking-strict. (default 'blocking')";
    };
    audit-log-path = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "If set, all requests coming to the apiserver will be logged to this file.  '-' means standard out.";
    };
    audit-log-truncate-enabled = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Whether event and batch truncating is enabled.";
    };
    audit-log-truncate-max-batch-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Maximum size of the batch sent to the underlying backend. Actual serialized size can be several hundreds of bytes greater. If a batch exceeds this limit, it is split into several batches of smaller size. (default 10485760)";
    };
    audit-log-truncate-max-event-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Maximum size of the audit event sent to the underlying backend. If the size of an event is greater than this number, first request and response are removed, and if this doesn't reduce the size enough, event is discarded. (default 102400)";
    };
    audit-log-version = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "API group and version used for serializing audit events written to log. (default 'udit.k8s.io/v1')";
    };
    audit-policy-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Path to the file that defines the audit policy configuration.";
    };
    audit-webhook-batch-buffer-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The size of the buffer to store events before batching and writing. Only used in batch mode. (default 10000)";
    };
    audit-webhook-batch-max-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The maximum size of a batch. Only used in batch mode. (default 400)";
    };
    audit-webhook-batch-max-wait = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The amount of time to wait before force writing the batch that hadn't reached the max size. Only used in batch mode. (default 30s)";
    };
    audit-webhook-batch-throttle-burst = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Maximum number of requests sent at the same moment if ThrottleQPS was not utilized before. Only used in batch mode. (default 15)";
    };
    audit-webhook-batch-throttle-enable = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Whether batching throttling is enabled. Only used in batch mode. (default true)";
    };
    audit-webhook-batch-throttle-qps = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "Maximum average number of batches per second. Only used in batch mode. (default 10)";
    };
    audit-webhook-config-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Path to a kubeconfig formatted file that defines the audit webhook configuration.";
    };
    audit-webhook-initial-backoff = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The amount of time to wait before retrying the first failed request. (default 10s)";
    };
    audit-webhook-mode = mkOption {
      type = types.nullOr (types.enum [
        "batch"
        "blocking"
        "blocking-strict"
      ]);
      default = null;
      description = "Strategy for sending audit events. Blocking indicates sending events should block server responses. Batch causes the backend to buffer and write events asynchronously. Known modes are batch,blocking,blocking-strict. (default 'batch')";
    };
    audit-webhook-truncate-enabled = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Whether event and batch truncating is enabled.";
    };
    audit-webhook-truncate-max-batch-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Maximum size of the batch sent to the underlying backend. Actual serialized size can be several hundreds of bytes greater. If a batch exceeds this limit, it is split into several batches of smaller size. (default 10485760)";
    };
    audit-webhook-truncate-max-event-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Maximum size of the audit event sent to the underlying backend. If the size of an event is greater than this number, first request and response are removed, and if this doesn't reduce the size enough, event is discarded. (default 102400)";
    };
    audit-webhook-version = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "API group and version used for serializing audit events written to webhook. (default " audit.k8s.io/v1 ")";
    };

    # features flags
    contention-profiling = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enable block profiling, if profiling is enabled";
    };
    debug-socket-path = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Use an unprotected (no authn/authz) unix-domain socket for profiling with the given path";
    };
    profiling = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enable profiling via web interface host:port/debug/pprof/ (default true)";
    };

    # Authentication flags
    anonymous-auth = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enables anonymous requests to the secure port of the API server. Requests that are not rejected by another authentication method are treated as anonymous requests. Anonymous requests have a username of system:anonymous, and a group name of system:unauthenticated. (default true)";
    };
    api-audiences = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "Identifiers of the API. The service account token authenticator will validate that tokens used against the API are bound to at least one of these audiences. If the --service-account-issuer flag is configured and this flag is not, this field defaults to a single element list containing the issuer URL.";
    };
    authentication-config = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File with Authentication Configuration to configure the JWT Token authenticator. Note: This feature is in Alpha since v1.29.--feature-gate=StructuredAuthenticationConfiguration=true needs to be set for enabling this feature.This feature is mutually exclusive with the oidc-* flags.";
    };
    authentication-token-webhook-cache-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache responses from the webhook token authenticator. (default 2m0s)";
    };
    authentication-token-webhook-config-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File with webhook configuration for token authentication in kubeconfig format. The API server will query the remote service to determine authentication for bearer tokens.";
    };
    authentication-token-webhook-version = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The API version of the authentication.k8s.io TokenReview to send to and expect from the webhook. (default 'v1beta1')";
    };
    client-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "If set, any request presenting a client certificate signed by one of the authorities in the client-ca-file is authenticated with an identity corresponding to the CommonName of the client certificate.";
    };
    enable-bootstrap-token-auth = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enable to allow secrets of type 'bootstrap.kubernetes.io/token' in the 'kube-system' namespace to be used for TLS bootstrapping authentication.";
    };
    oidc-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "If set, the OpenID server's certificate will be verified by one of the authorities in the oidc-ca-file, otherwise the host's root CA set will be used.";
    };
    oidc-client-id = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The client ID for the OpenID Connect client, must be set if oidc-issuer-url is set.";
    };
    oidc-groups-claim = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "If provided, the name of a custom OpenID Connect claim for specifying user groups. The claim value is expected to be a string or array of strings. This flag is experimental, please see the authentication documentation for further details.";
    };
    oidc-groups-prefix = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "If provided, all groups will be prefixed with this value to prevent conflicts with other authentication strategies.";
    };
    oidc-issuer-url = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The URL of the OpenID issuer, only HTTPS scheme will be accepted. If set, it will be used to verify the OIDC JSON Web Token (JWT).";
    };
    oidc-required-claim = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "A key=value pair that describes a required claim in the ID Token. If set, the claim is verified to be present in the ID Token with a matching value. Repeat this flag to specify multiple claims.";
    };
    oidc-signing-algs = mkOption {
      type = types.nullOr (types.enum [
        "RS256"
        "RS384"
        "RS512"
        "ES256"
        "ES384"
        "ES512"
        "PS256"
        "PS384"
        "PS512"
      ]);
      default = null;
      description = "Comma-separated list of allowed JOSE asymmetric signing algorithms. JWTs with a supported 'alg' header values are: RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512. Values are defined by RFC 7518 https://tools.ietf.org/html/rfc7518#section-3.1. (default [RS256])";
    };
    oidc-username-claim = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The OpenID claim to use as the user name. Note that claims other than the default ('sub') is not guaranteed to be unique and immutable. This flag is experimental, please see the authentication documentation for further details. (default 'sub')";
    };
    oidc-username-prefix = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "If provided, all usernames will be prefixed with this value. If not provided, username claims other than 'email' are prefixed by the issuer URL to avoid clashes. To skip any prefixing, provide the value '-'.";
    };
    requestheader-allowed-names = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of client certificate common names to allow to provide usernames in headers specified by --requestheader-username-headers. If empty, any client certificate validated by the authorities in --requestheader-client-ca-file is allowed.";
    };
    requestheader-client-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Root certificate bundle to use to verify client certificates on incoming requests before trusting usernames in headers specified by --requestheader-username-headers. WARNING: generally do not depend on authorization being already done for incoming requests.";
    };
    requestheader-extra-headers-prefix = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request header prefixes to inspect. X-Remote-Extra- is suggested.";
    };
    requestheader-group-headers = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request headers to inspect for groups. X-Remote-Group is suggested.";
    };
    requestheader-username-headers = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request headers to inspect for usernames. X-Remote-User is common.";
    };
    service-account-extend-token-expiration = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Turns on projected service account expiration extension during token generation, which helps safe transition from legacy token to bound service account token feature. If this flag is enabled, admission injected tokens would be extended up to 1 year to prevent unexpected failure during transition, ignoring value of service-account-max-token-expiration. (default true)";
    };
    service-account-issuer = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Identifier of the service account token issuer. The issuer will assert this identifier in 'iss' claim of issued tokens. This value is a string or URI. If this option is not a valid URI per the OpenID Discovery 1.0 spec, the ServiceAccountIssuerDiscovery feature will remain disabled, even if the feature gate is set to true. It is highly recommended that this value comply with the OpenID spec: https://openid.net/specs/openid-connect-discovery-1_0.html. In practice, this means that service-account-issuer must be an https URL. It is also highly recommended that this URL be capable of serving OpenID discovery documents at {service-account-issuer}/.well-known/openid-configuration. When this flag is specified multiple times, the first is used to generate tokens and all are used to determine which issuers are accepted.";
    };
    service-account-jwks-uri = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Overrides the URI for the JSON Web Key Set in the discovery doc served at /.well-known/openid-configuration. This flag is useful if the discovery docand key set are served to relying parties from a URL other than the API server's external (as auto-detected or overridden with external-hostname).";
    };
    service-account-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File containing PEM-encoded x509 RSA or ECDSA private or public keys, used to verify ServiceAccount tokens. The specified file can contain multiple keys, and the flag can be specified multiple times with different files. If unspecified, --tls-private-key-file is used. Must be specified when --service-account-signing-key-file is provided";
    };
    service-account-lookup = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, validate ServiceAccount tokens exist in etcd as part of authentication. (default true)";
    };
    service-account-max-token-expiration = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The maximum validity duration of a token created by the service account token issuer. If an otherwise valid TokenRequest with a validity duration larger than this value is requested, a token will be issued with a validity duration of this value.";
    };
    token-auth-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "If set, the file that will be used to secure the secure port of the API server via token authentication.";
    };

    # Authorization flags
    authorization-config = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File with Authorization Configuration to configure the authorizer chain.Note: This feature is in Alpha since v1.29.--feature-gate=StructuredAuthorizationConfiguration=true feature flag needs to be set to true for enabling the functionality.This feature is mutually exclusive with the other --authorization-mode and --authorization-webhook-* flags.";
    };
    authorization-mode = mkOption {
      type = types.nullOr (types.listOf (types.enum [
        "AlwaysAllow"
        "AlwaysDeny"
        "ABAC"
        "Webhook"
        "RBAC"
        "Node"
      ]));
      default = null;
      description = "Ordered list of plug-ins to do authorization on secure port. Defaults to AlwaysAllow if --authorization-config is not used. Comma-delimited list of: AlwaysAllow,AlwaysDeny,ABAC,Webhook,RBAC,Node.";
    };
    authorization-policy-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File with authorization policy in json line by line format, used with --authorization-mode=ABAC, on the secure port.";
    };
    authorization-webhook-cache-authorized-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache 'authorized' responses from the webhook authorizer. (default 5m0s)";
    };
    authorization-webhook-cache-unauthorized-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache 'unauthorized' responses from the webhook authorizer. (default 30s)";
    };
    authorization-webhook-config-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File with webhook configuration in kubeconfig format, used with --authorization-mode=Webhook. The API server will query the remote service to determine access on the API server's secure port.";
    };
    authorization-webhook-version = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The API version of the authorization.k8s.io SubjectAccessReview to send to and expect from the webhook. (default 'v1beta1')";
    };

    # API enablement flags:
    runtime-config = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "" "
A set of key=value pairs that enable or disable built-in APIs. Supported options are:
  v1=true|false for the core API group
  <group>/<version>=true|false for a specific API group and version (e.g. apps/v1=true)
  api/all=true|false controls all API versions
  api/ga=true|false controls all API versions of the form v[0-9]+
  api/beta=true|false controls all API versions of the form v[0-9]+beta[0-9]+
  api/alpha=true|false controls all API versions of the form v[0-9]+alpha[0-9]+
  api/legacy is deprecated, and will be removed in a future version
" "";
    };
    egress-selector-config-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File with apiserver egress selector configuration.";
    };
    admission-control = mkOption {
      type = types.nullOr (types.listOf (types.enum [
        "AlwaysAdmit"
        "AlwaysDeny"
        "AlwaysPullImages"
        "CertificateApproval"
        "CertificateSigning"
        "CertificateSubjectRestriction"
        "ClusterTrustBundleAttest"
        "DefaultIngressClass"
        "DefaultStorageClass"
        "DefaultTolerationSeconds"
        "DenyServiceExternalIPs"
        "EventRateLimit"
        "ExtendedResourceToleration"
        "ImagePolicyWebhook"
        "LimitPodHardAntiAffinityTopology"
        "LimitRanger"
        "MutatingAdmissionWebhook"
        "NamespaceAutoProvision"
        "NamespaceExists"
        "NamespaceLifecycle"
        "NodeRestriction"
        "OwnerReferencesPermissionEnforcement"
        "PersistentVolumeClaimResize"
        "PersistentVolumeLabel"
        "PodNodeSelector"
        "PodSecurity"
        "PodTolerationRestriction"
        "Priority"
        "ResourceQuota"
        "RuntimeClass"
        "ServiceAccount"
        "StorageObjectInUseProtection"
        "TaintNodesByCondition"
        "ValidatingAdmissionPolicy"
        "ValidatingAdmissionWebhook"
      ]));
      default = null;
      description = "Admission is divided into two phases. In the first phase, only mutating admission plugins run. In the second phase, only validating admission plugins run. The names in the below list may represent a validating plugin, a mutating plugin, or both. The order of plugins in which they are passed to this flag does not matter. Comma-delimited list of: AlwaysAdmit, AlwaysDeny, AlwaysPullImages, CertificateApproval, CertificateSigning, CertificateSubjectRestriction, ClusterTrustBundleAttest, DefaultIngressClass, DefaultStorageClass, DefaultTolerationSeconds, DenyServiceExternalIPs, EventRateLimit, ExtendedResourceToleration, ImagePolicyWebhook, LimitPodHardAntiAffinityTopology, LimitRanger, MutatingAdmissionWebhook, NamespaceAutoProvision, NamespaceExists, NamespaceLifecycle, NodeRestriction, OwnerReferencesPermissionEnforcement, PersistentVolumeClaimResize, PersistentVolumeLabel, PodNodeSelector, PodSecurity, PodTolerationRestriction, Priority, ResourceQuota, RuntimeClass, ServiceAccount, StorageObjectInUseProtection, TaintNodesByCondition, ValidatingAdmissionPolicy, ValidatingAdmissionWebhook. (DEPRECATED: Use --enable-admission-plugins or --disable-admission-plugins instead. Will be removed in a future version.)";
    };
    admission-control-config-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File with admission control configuration.";
    };
    disable-admission-plugins = mkOption {
      type = types.nullOr (types.listOf (types.enum [
        "NamespaceLifecycle"
        "LimitRanger"
        "ServiceAccount"
        "TaintNodesByCondition"
        "PodSecurity"
        "Priority"
        "DefaultTolerationSeconds"
        "DefaultStorageClass"
        "StorageObjectInUseProtection"
        "PersistentVolumeClaimResize"
        "RuntimeClass"
        "CertificateApproval"
        "CertificateSigning"
        "ClusterTrustBundleAttest"
        "CertificateSubjectRestriction"
        "DefaultIngressClass"
        "MutatingAdmissionWebhook"
        "ValidatingAdmissionPolicy"
        "ValidatingAdmissionWebhook"
        "ResourceQuota"
      ]));
      default = null;
      description = "The admission plugins that should be disabled although they are in the default enabled plugins list (NamespaceLifecycle, LimitRanger, ServiceAccount, TaintNodesByCondition, PodSecurity, Priority, DefaultTolerationSeconds, DefaultStorageClass, StorageObjectInUseProtection, PersistentVolumeClaimResize, RuntimeClass, CertificateApproval, CertificateSigning, ClusterTrustBundleAttest, CertificateSubjectRestriction, DefaultIngressClass, MutatingAdmissionWebhook, ValidatingAdmissionPolicy, ValidatingAdmissionWebhook, ResourceQuota). Comma-delimited list of admission plugins: AlwaysAdmit, AlwaysDeny, AlwaysPullImages, CertificateApproval, CertificateSigning, CertificateSubjectRestriction, ClusterTrustBundleAttest, DefaultIngressClass, DefaultStorageClass, DefaultTolerationSeconds, DenyServiceExternalIPs, EventRateLimit, ExtendedResourceToleration, ImagePolicyWebhook, LimitPodHardAntiAffinityTopology, LimitRanger, MutatingAdmissionWebhook, NamespaceAutoProvision, NamespaceExists, NamespaceLifecycle, NodeRestriction, OwnerReferencesPermissionEnforcement, PersistentVolumeClaimResize, PersistentVolumeLabel, PodNodeSelector, PodSecurity, PodTolerationRestriction, Priority, ResourceQuota, RuntimeClass, ServiceAccount, StorageObjectInUseProtection, TaintNodesByCondition, ValidatingAdmissionPolicy, ValidatingAdmissionWebhook. The order of plugins in this flag does not matter.";
    };
    enable-admission-plugins = mkOption {
      type = types.nullOr (types.listOf (types.enum [
        "AlwaysAdmit"
        "AlwaysDeny"
        "AlwaysPullImages"
        "CertificateApproval"
        "CertificateSigning"
        "CertificateSubjectRestriction"
        "ClusterTrustBundleAttest"
        "DefaultIngressClass"
        "DefaultStorageClass"
        "DefaultTolerationSeconds"
        "DenyServiceExternalIPs"
        "EventRateLimit"
        "ExtendedResourceToleration"
        "ImagePolicyWebhook"
        "LimitPodHardAntiAffinityTopology"
        "LimitRanger"
        "MutatingAdmissionWebhook"
        "NamespaceAutoProvision"
        "NamespaceExists"
        "NamespaceLifecycle"
        "NodeRestriction"
        "OwnerReferencesPermissionEnforcement"
        "PersistentVolumeClaimResize"
        "PersistentVolumeLabel"
        "PodNodeSelector"
        "PodSecurity"
        "PodTolerationRestriction"
        "Priority"
        "ResourceQuota"
        "RuntimeClass"
        "ServiceAccount"
        "StorageObjectInUseProtection"
        "TaintNodesByCondition"
        "ValidatingAdmissionPolicy"
        "ValidatingAdmissionWebhook"
      ]));
      default = null;
      description = "The admission plugins that should be disabled although they are in the default enabled plugins list (NamespaceLifecycle, LimitRanger, ServiceAccount, TaintNodesByCondition, PodSecurity, Priority, DefaultTolerationSeconds, DefaultStorageClass, StorageObjectInUseProtection, PersistentVolumeClaimResize, RuntimeClass, CertificateApproval, CertificateSigning, ClusterTrustBundleAttest, CertificateSubjectRestriction, DefaultIngressClass, MutatingAdmissionWebhook, ValidatingAdmissionPolicy, ValidatingAdmissionWebhook, ResourceQuota). Comma-delimited list of admission plugins: AlwaysAdmit, AlwaysDeny, AlwaysPullImages, CertificateApproval, CertificateSigning, CertificateSubjectRestriction, ClusterTrustBundleAttest, DefaultIngressClass, DefaultStorageClass, DefaultTolerationSeconds, DenyServiceExternalIPs, EventRateLimit, ExtendedResourceToleration, ImagePolicyWebhook, LimitPodHardAntiAffinityTopology, LimitRanger, MutatingAdmissionWebhook, NamespaceAutoProvision, NamespaceExists, NamespaceLifecycle, NodeRestriction, OwnerReferencesPermissionEnforcement, PersistentVolumeClaimResize, PersistentVolumeLabel, PodNodeSelector, PodSecurity, PodTolerationRestriction, Priority, ResourceQuota, RuntimeClass, ServiceAccount, StorageObjectInUseProtection, TaintNodesByCondition, ValidatingAdmissionPolicy, ValidatingAdmissionWebhook. The order of plugins in this flag does not matter.";
    };

    # Metrics flags
    allow-metric-labels = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "The map from metric-label to value allow-list of this label. The key's format is <MetricName>,<LabelName>. The value's format is <allowed_value>,<allowed_value>...e.g. metric1,label1='v1,v2,v3', metric1,label2='v1,v2,v3' metric2,label1='v1,v2,v3'. (default [])";
    };
    allow-metric-labels-manifest = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The path to the manifest file that contains the allow-list mapping. The format of the file is the same as the flag --allow-metric-labels. Note that the flag --allow-metric-labels will override the manifest file.";
    };
    disabled-metrics = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "This flag provides an escape hatch for misbehaving metrics. You must provide the fully qualified metric name in order to disable it. Disclaimer: disabling metrics is higher in precedence than showing hidden metrics.";
    };
    show-hidden-metrics-for-version = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The previous version for which you want to show hidden metrics. Only the previous minor version is meaningful, other values will not be allowed. The format is <major>.<minor>, e.g.: '1.16'. The purpose of this format is make sure you have the opportunity to notice if the next release hides additional metrics, rather than being surprised when they are permanently removed in the release after that.";
    };

    # Logs flags
    log-flush-frequency = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Maximum number of seconds between log flushes (default 5s)";
    };
    log-json-info-buffer-size = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "[Alpha] In JSON format with split output streams, the info messages can be buffered for a while to increase performance. The default value of zero bytes disables buffering. The size can be specified as number of bytes (512), multiples of 1000 (1K), multiples of 1024 (2Ki), or powers of those (3M, 4G, 5Mi, 6Gi). Enable the LoggingAlphaOptions feature gate to use this.";
    };
    log-json-split-stream = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "[Alpha] In JSON format, write error messages to stderr and info messages to stdout. The default is to write a single stream to stdout. Enable the LoggingAlphaOptions feature gate to use this.";
    };
    log-text-info-buffer-size = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "[Alpha] In text format with split output streams, the info messages can be buffered for a while to increase performance. The default value of zero bytes disables buffering. The size can be specified as number of bytes (512), multiples of 1000 (1K), multiples of 1024 (2Ki), or powers of those (3M, 4G, 5Mi, 6Gi). Enable the LoggingAlphaOptions feature gate to use this.";
    };
    log-text-split-stream = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "[Alpha] In text format, write error messages to stderr and info messages to stdout. The default is to write a single stream to stdout. Enable the LoggingAlphaOptions feature gate to use this.";
    };
    logging-format = mkOption {
      type = types.nullOr (types.enum [
        "json"
        "text"
      ]);
      default = null;
      description = "Sets the log format. Permitted formats: 'json' (gated by LoggingBetaOptions), 'text'. (default 'text'";
    };
    v = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "number for the log level verbosity";
    };
    vmodule = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "A comma-separated list of pattern=N settings for file-filtered logging (only works for text log format)";
    };

    # Traces flags
    tracing-config-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File with apiserver tracing configuration.";
    };

    # Misc flags
    aggregator-reject-forwarding-redirect = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Aggregator reject forwarding redirect response back to client. (default true)";
    };
    allow-privileged = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, allow privileged containers. [default=false]";
    };
    enable-aggregator-routing = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Turns on aggregator routing requests to endpoints IP rather than cluster IP.";
    };
    endpoint-reconciler-type = mkOption {
      type = types.nullOr (types.enum [
        "master-count"
        "lease"
        "none"
      ]);
      default = null;
      description = "Use an endpoint reconciler (master-count, lease, none) master-count is deprecated, and will be removed in a future version. (default 'lease')";
    };
    event-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Amount of time to retain events. (default 1h0m0s)";
    };
    kubelet-certificate-authority = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Path to a cert file for the certificate authority.";
    };
    kubelet-client-certificate = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Path to a client cert file for TLS.";
    };
    kubelet-client-key = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Path to a client key file for TLS.";
    };
    kubelet-preferred-address-types = mkOption {
      type = types.nullOr (types.listOf (types.enum [
        "Hostname"
        "InternalDNS"
        "InternalIP"
        "ExternalDNS"
        "ExternalIP"
      ]));
      default = null;
      description = "List of the preferred NodeAddressTypes to use for kubelet connections. (default [Hostname,InternalDNS,InternalIP,ExternalDNS,ExternalIP])";
    };
    kubelet-timeout = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Timeout for kubelet operations. (default 5s)";
    };
    kubernetes-service-node-port = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "If non-zero, the Kubernetes master service (which apiserver creates/maintains) will be of type NodePort, using this as the value of the port. If zero, the Kubernetes master service will be of type ClusterIP.";
    };
    max-connection-bytes-per-sec = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "If non-zero, throttle each user connection to this number of bytes/sec. Currently only applies to long-running requests.";
    };
    peer-advertise-ip = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "If set and the UnknownVersionInteroperabilityProxy feature gate is enabled, this IP will be used by peer kube-apiservers to proxy requests to this kube-apiserver when the request cannot be handled by the peer due to version skew between the kube-apiservers. This flag is only used in clusters configured with multiple kube-apiservers for high availability. ";
    };
    peer-advertise-port = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "If set and the UnknownVersionInteroperabilityProxy feature gate is enabled, this port will be used by peer kube-apiservers to proxy requests to this kube-apiserver when the request cannot be handled by the peer due to version skew between the kube-apiservers. This flag is only used in clusters configured with multiple kube-apiservers for high availability.";
    };
    peer-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "If set and the UnknownVersionInteroperabilityProxy feature gate is enabled, this file will be used to verify serving certificates of peer kube-apiservers. This flag is only used in clusters configured with multiple kube-apiservers for high availability.";
    };
    proxy-client-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Client certificate used to prove the identity of the aggregator or kube-apiserver when it must call out during a request. This includes proxying requests to a user api-server and calling out to webhook admission plugins. It is expected that this cert includes a signature from the CA in the --requestheader-client-ca-file flag. That CA is published in the 'extension-apiserver-authentication' configmap in the kube-system namespace. Components receiving calls from kube-aggregator should use that CA to perform their half of the mutual TLS verification.";
    };
    proxy-client-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Private key for the client certificate used to prove the identity of the aggregator or kube-apiserver when it must call out during a request. This includes proxying requests to a user api-server and calling out to webhook admission plugins.";
    };
    service-account-signing-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Path to the file that contains the current private key of the service account token issuer. The issuer will sign issued ID tokens with this private key.";
    };
    service-cluster-ip-range = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "A CIDR notation IP range from which to assign service cluster IPs. This must not overlap with any IP ranges assigned to nodes or pods. Max of two dual-stack CIDRs is allowed.";
    };
    service-node-port-range = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "A port range to reserve for services with NodePort visibility.  This must not overlap with the ephemeral port range on nodes.  Example: '30000-32767'. Inclusive at both ends of the range. (default 30000-32767)";
    };
  };

  config = mkIf cfg.enable {
    systemd.services.kube-apiserver = {
      description = "The Kubernetes API server validates and configures data for the api objects which include pods, services, replicationcontrollers, and others. The API Server services REST operations and provides the frontend to the cluster's shared state through which all other components interact..";
      after = [ "network.target" ];
      wantedBy = [ "multi-user.target" ];

      serviceConfig = {
        ExecStart = ''
          ${pkgs.coreutils}/bin/echo ${pkgs.kubernetes}/bin/kube-apiserver \
            ${optionalString (cfg.advertise-address != null) "--advertise-address ${cfg.advertise-address}"} \
            ${
              optionalString (
                cfg.cloud-provider-gce-l7lb-src-cidrs != null
              ) "--cloud-provider-gce-l7lb-src-cidrs \"${concatStringsSep "," cfg.cloud-provider-gce-l7lb-src-cidrs}\""
            } \
            ${
              optionalString (cfg.cors-allowed-origins != null) "--cors-allowed-origins \"${concatStringsSep "," cfg.cors-allowed-origins}\""
            } \
            ${
              optionalString (
                cfg.default-not-ready-toleration-seconds != null
              ) "--default-not-ready-toleration-seconds ${toString cfg.default-not-ready-toleration-seconds}"
            } \
            ${
              optionalString (
                cfg.default-unreachable-toleration-seconds != null
              ) "--default-unreachable-toleration-seconds ${toString cfg.default-unreachable-toleration-seconds}"
            } \
            ${optionalString (cfg.enable-priority-and-fairness != null) "--enable-priority-and-fairness ${boolToString cfg.enable-priority-and-fairness}"} \
            ${optionalString (cfg.external-hostname != null) "--external-hostname ${cfg.external-hostname}"} \
            ${optionalString (cfg.feature-gates != null) "--feature-gates \"${concatStringsSep "," cfg.feature-gates}\""} \
            ${optionalString (cfg.goaway-chance != null) "--goaway-chance ${toString cfg.goaway-chance}"} \
            ${optionalString (cfg.livez-grace-period != null) "--livez-grace-period ${toString cfg.livez-grace-period}"} \
            ${
              optionalString (
                cfg.max-mutating-requests-inflight != null
              ) "--max-mutating-requests-inflight ${toString cfg.max-mutating-requests-inflight}"
            } \
            ${
              optionalString (
                cfg.max-requests-inflight != null
              ) "--max-requests-inflight ${toString cfg.max-requests-inflight}"
            } \
            ${
              optionalString (cfg.min-request-timeout != null) "--min-request-timeout ${toString cfg.min-request-timeout}"
            } \
            ${optionalString (cfg.request-timeout != null) "--request-timeout ${toString cfg.request-timeout}"} \
            ${
              optionalString (
                cfg.shutdown-delay-duration != null
              ) "--shutdown-delay-duration ${toString cfg.shutdown-delay-duration}"
            } \
            ${optionalString (cfg.shutdown-send-retry-after != null) "--shutdown-send-retry-after ${boolToString cfg.shutdown-send-retry-after}"} \
            ${
              optionalString (
                cfg.shutdown-watch-termination-grace-period != null
              ) "--shutdown-watch-termination-grace-period ${toString cfg.shutdown-watch-termination-grace-period}"
            } \
            ${
              optionalString (
                cfg.strict-transport-security-directives != null
              ) "--strict-transport-security-directives \"${concatStringsSep "," cfg.strict-transport-security-directives}\""
            } \
            ${
              optionalString (
                cfg.delete-collection-workers != null
              ) "--delete-collection-workers ${toString cfg.delete-collection-workers}"
            } \
            ${optionalString (cfg.enable-garbage-collector != null) "--enable-garbage-collector ${boolToString cfg.enable-garbage-collector}"} \
            ${optionalString (cfg.encryption-provider-config != null) "--encryption-provider-config ${cfg.encryption-provider-config}"} \
            ${optionalString (cfg.encryption-provider-config-automatic-reload != null) "--encryption-provider-config-automatic-reload ${boolToString cfg.encryption-provider-config-automatic-reload}"} \
            ${optionalString (cfg.etcd-cafile != null) "--etcd-cafile ${cfg.etcd-cafile}"} \
            ${optionalString (cfg.etcd-certfile != null) "--etcd-certfile ${cfg.etcd-certfile}"} \
            ${optionalString (cfg.etcd-compaction-interval != null) "--etcd-compaction-interval ${cfg.etcd-compaction-interval}"} \
            ${optionalString (cfg.etcd-count-metric-poll-period != null) "--etcd-count-metric-poll-period ${cfg.etcd-count-metric-poll-period}"} \
            ${optionalString (cfg.etcd-db-metric-poll-interval != null) "--etcd-db-metric-poll-interval ${cfg.etcd-db-metric-poll-interval}"} \
            ${optionalString (cfg.etcd-healthcheck-timeout != null) "--etcd-healthcheck-timeout ${cfg.etcd-healthcheck-timeout}"} \
            ${optionalString (cfg.etcd-keyfile != null) "--etcd-keyfile ${cfg.etcd-keyfile}"} \
            ${optionalString (cfg.etcd-prefix != null) "--etcd-prefix ${cfg.etcd-prefix}"} \
            ${optionalString (cfg.etcd-readycheck-timeout != null) "--etcd-readycheck-timeout ${cfg.etcd-readycheck-timeout}"} \
            ${optionalString (cfg.etcd-servers != null) "--etcd-servers \"${concatStringsSep "," cfg.etcd-servers}\""} \
            ${optionalString (cfg.etcd-servers-overrides != null) "--etcd-servers-overrides \"${concatStringsSep "," cfg.etcd-servers-overrides}\""} \
            ${optionalString (cfg.lease-reuse-duration-seconds != null) "--lease-reuse-duration-seconds ${toString cfg.lease-reuse-duration-seconds}"} \
            ${optionalString (cfg.storage-backend != null) "--storage-backend ${cfg.storage-backend}"} \
            ${optionalString (cfg.storage-media-type != null) "--storage-media-type ${cfg.storage-media-type}"} \
            ${optionalString (cfg.watch-cache != null) "--watch-cache ${boolToString cfg.watch-cache}"} \
            ${optionalString (cfg.watch-cache-sizes != null) "--watch-cache-sizes \"${concatStringsSep "," cfg.watch-cache-sizes}\""} \
            ${optionalString (cfg.bind-address != null) "--bind-address ${cfg.bind-address}"} \
            ${optionalString (cfg.cert-dir != null) "--cert-dir ${cfg.cert-dir}"} \
            ${optionalString (cfg.http2-max-streams-per-connection != null) "--http2-max-streams-per-connection ${toString cfg.http2-max-streams-per-connection}"} \
            ${optionalString (cfg.permit-address-sharing != null) "--permit-address-sharing ${boolToString cfg.permit-address-sharing}"} \
            ${optionalString (cfg.permit-port-sharing != null) "--permit-port-sharing ${boolToString cfg.permit-port-sharing}"} \
            ${optionalString (cfg.secure-port != null) "--secure-port ${toString cfg.secure-port}"} \
            ${optionalString (cfg.tls-cert-file != null) "--tls-cert-file ${cfg.tls-cert-file}"} \
            ${optionalString (cfg.tls-cipher-suites != null) "--tls-cipher-suites \"${concatStringsSep "," cfg.tls-cipher-suites}\""} \
            ${optionalString (cfg.tls-min-version != null) "--tls-min-version ${cfg.tls-min-version}"} \
            ${optionalString (cfg.tls-private-key-file != null) "--tls-private-key-file ${cfg.tls-private-key-file}"} \
            ${optionalString (cfg.tls-sni-cert-key != null) "--tls-sni-cert-key \"${concatStringsSep "," cfg.tls-sni-cert-key}\""} \
            ${optionalString (cfg.audit-log-batch-buffer-size != null) "--audit-log-batch-buffer-size ${toString cfg.audit-log-batch-buffer-size}"} \
            ${optionalString (cfg.audit-log-batch-max-size != null) "--audit-log-batch-max-size ${toString cfg.audit-log-batch-max-size}"} \
            ${optionalString (cfg.audit-log-batch-max-wait != null) "--audit-log-batch-max-wait ${toString cfg.audit-log-batch-max-wait}"} \
            ${optionalString (cfg.audit-log-batch-throttle-burst != null) "--audit-log-batch-throttle-burst ${toString cfg.audit-log-batch-throttle-burst}"} \
            ${optionalString (cfg.audit-log-batch-throttle-enable != null) "--audit-log-batch-throttle-enable ${boolToString cfg.audit-log-batch-throttle-enable}"} \
            ${optionalString (cfg.audit-log-batch-throttle-qps != null) "--audit-log-batch-throttle-qps ${toString cfg.audit-log-batch-throttle-qps}"} \
            ${optionalString (cfg.audit-log-compress != null) "--audit-log-compress"} \
            ${optionalString (cfg.audit-log-format != null) "--audit-log-format ${cfg.audit-log-format}"} \
            ${optionalString (cfg.audit-log-maxage != null) "--audit-log-maxage ${toString cfg.audit-log-maxage}"} \
            ${optionalString (cfg.audit-log-maxbackup != null) "--audit-log-maxbackup ${toString cfg.audit-log-maxbackup}"} \
            ${optionalString (cfg.audit-log-maxsize != null) "--audit-log-maxsize ${toString cfg.audit-log-maxsize}"} \
            ${optionalString (cfg.audit-log-mode != null) "--audit-log-mode ${cfg.audit-log-mode}"} \
            ${optionalString (cfg.audit-log-path != null) "--audit-log-path ${cfg.audit-log-path}"} \
            ${optionalString (cfg.audit-log-truncate-enabled != null) "--audit-log-truncate-enabled"} \
            ${optionalString (cfg.audit-log-truncate-max-batch-size != null) "--audit-log-truncate-max-batch-size ${toString cfg.audit-log-truncate-max-batch-size}"} \
            ${optionalString (cfg.audit-log-truncate-max-event-size != null) "--audit-log-truncate-max-event-size ${toString cfg.audit-log-truncate-max-event-size}"} \
            ${optionalString (cfg.audit-log-version != null) "--audit-log-version ${cfg.audit-log-version}"} \
            ${optionalString (cfg.audit-policy-file != null) "--audit-policy-file ${cfg.audit-policy-file}"} \
            ${optionalString (cfg.audit-webhook-batch-buffer-size != null) "--audit-webhook-batch-buffer-size ${toString cfg.audit-webhook-batch-buffer-size}"} \
            ${optionalString (cfg.audit-webhook-batch-max-size != null) "--audit-webhook-batch-max-size ${toString cfg.audit-webhook-batch-max-size}"} \
            ${optionalString (cfg.audit-webhook-batch-max-wait != null) "--audit-webhook-batch-max-wait ${toString cfg.audit-webhook-batch-max-wait}"} \
            ${optionalString (cfg.audit-webhook-batch-throttle-burst != null) "--audit-webhook-batch-throttle-burst ${toString cfg.audit-webhook-batch-throttle-burst}"} \
            ${optionalString (cfg.audit-webhook-batch-throttle-enable != null) "--audit-webhook-batch-throttle-enable         ${boolToString cfg.audit-webhook-batch-throttle-enable}"} \
            ${optionalString (cfg.audit-webhook-batch-throttle-qps != null) "--audit-webhook-batch-throttle-qps ${toString cfg.audit-webhook-batch-throttle-qps}"} \
            ${optionalString (cfg.audit-webhook-config-file != null) "--audit-webhook-config-file ${cfg.audit-webhook-config-file}"} \
            ${optionalString (cfg.audit-webhook-initial-backoff != null) "--audit-webhook-initial-backoff ${cfg.audit-webhook-initial-backoff}"} \
            ${optionalString (cfg.audit-webhook-mode != null) "--audit-webhook-mode ${cfg.audit-webhook-mode}"} \
            ${optionalString (cfg.audit-webhook-truncate-enabled != null) "--audit-webhook-truncate-enabled"} \
            ${optionalString (cfg.audit-webhook-truncate-max-batch-size != null) "--audit-webhook-truncate-max-batch-size ${toString cfg.audit-webhook-truncate-max-batch-size}"} \
            ${optionalString (cfg.audit-webhook-truncate-max-event-size != null) "--audit-webhook-truncate-max-event-size ${toString cfg.audit-webhook-truncate-max-event-size}"} \
            ${optionalString (cfg.audit-webhook-version != null) "--audit-webhook-version ${cfg.audit-webhook-version}"} \
            ${optionalString (cfg.contention-profiling != null) "--contention-profiling"} \
            ${optionalString (cfg.debug-socket-path != null) "--debug-socket-path ${cfg.debug-socket-path}"} \
            ${optionalString (cfg.profiling != null) "--profiling ${boolToString cfg.profiling}"} \
            ${optionalString (cfg.anonymous-auth != null) "--anonymous-auth ${boolToString cfg.anonymous-auth}"} \
            ${optionalString (cfg.api-audiences != null) "--api-audiences \"${concatStringsSep "," cfg.api-audiences}\""} \
            ${optionalString (cfg.authentication-config != null) "--authentication-config ${cfg.authentication-config}"} \
            ${optionalString (cfg.authentication-token-webhook-cache-ttl != null) "--authentication-token-webhook-cache-ttl ${cfg.authentication-token-webhook-cache-ttl}"} \
            ${optionalString (cfg.authentication-token-webhook-config-file != null) "--authentication-token-webhook-config-file ${cfg.authentication-token-webhook-config-file}"} \
            ${optionalString (cfg.authentication-token-webhook-version != null) "--authentication-token-webhook-version ${cfg.authentication-token-webhook-version}"} \
            ${optionalString (cfg.client-ca-file != null) "--client-ca-file ${cfg.client-ca-file}"} \
            ${optionalString (cfg.enable-bootstrap-token-auth != null) "--enable-bootstrap-token-auth"} \
            ${optionalString (cfg.oidc-ca-file != null) "--oidc-ca-file ${cfg.oidc-ca-file}"} \
            ${optionalString (cfg.oidc-client-id != null) "--oidc-client-id ${cfg.oidc-client-id}"} \
            ${optionalString (cfg.oidc-groups-claim != null) "--oidc-groups-claim ${cfg.oidc-groups-claim}"} \
            ${optionalString (cfg.oidc-groups-prefix != null) "--oidc-groups-prefix ${cfg.oidc-groups-prefix}"} \
            ${optionalString (cfg.oidc-issuer-url != null) "--oidc-issuer-url ${cfg.oidc-issuer-url}"} \
            ${concatStringsSep " " oidc-required-claim-items} \
            ${optionalString (cfg.oidc-signing-algs != null) "--oidc-signing-algs ${cfg.oidc-signing-algs}"} \
            ${optionalString (cfg.oidc-username-claim != null) "--oidc-username-claim ${cfg.oidc-username-claim}"} \
            ${optionalString (cfg.oidc-username-prefix != null) "--oidc-username-prefix ${cfg.oidc-username-prefix}"} \
            ${optionalString (cfg.requestheader-allowed-names != null) "--requestheader-allowed-names \"${concatStringsSep "," cfg.requestheader-allowed-names}\""} \
            ${optionalString (cfg.requestheader-client-ca-file != null) "--requestheader-client-ca-file ${cfg.requestheader-client-ca-file}"} \
            ${optionalString (cfg.requestheader-extra-headers-prefix != null) "--requestheader-extra-headers-prefix \"${concatStringsSep "," cfg.requestheader-extra-headers-prefix}\""} \
            ${optionalString (cfg.requestheader-group-headers != null) "--requestheader-group-headers \"${concatStringsSep "," cfg.requestheader-group-headers}\""} \
            ${optionalString (cfg.requestheader-username-headers != null) "--requestheader-username-headers \"${concatStringsSep "," cfg.requestheader-username-headers}\""} \
            ${optionalString (cfg.service-account-extend-token-expiration != null) "--service-account-extend-token-expiration ${boolToString cfg.service-account-extend-token-expiration}"} \
            ${optionalString (cfg.service-account-issuer != null) "--service-account-issuer ${cfg.service-account-issuer}"} \
            ${optionalString (cfg.service-account-jwks-uri != null) "--service-account-jwks-uri ${cfg.service-account-jwks-uri}"} \
            ${optionalString (cfg.service-account-key-file != null) "--service-account-key-file ${cfg.service-account-key-file}"} \
            ${optionalString (cfg.service-account-lookup != null) "--service-account-lookup ${boolToString cfg.service-account-lookup}"} \
            ${optionalString (cfg.service-account-max-token-expiration != null) "--service-account-max-token-expiration ${cfg.service-account-max-token-expiration}"} \
            ${optionalString (cfg.token-auth-file != null) "--token-auth-file ${cfg.token-auth-file}"} \
            ${optionalString (cfg.authorization-config != null) "--authorization-config ${cfg.authorization-config}"} \
            ${optionalString (cfg.authorization-mode != null) "--authorization-mode \"${concatStringsSep "," cfg.authorization-mode}\""} \
            ${optionalString (cfg.authorization-policy-file != null) "--authorization-policy-file ${cfg.authorization-policy-file}"} \
            ${optionalString (cfg.authorization-webhook-cache-authorized-ttl != null) "--authorization-webhook-cache-authorized-ttl ${cfg.authorization-webhook-cache-authorized-ttl}"} \
            ${optionalString (cfg.authorization-webhook-cache-unauthorized-ttl != null) "--authorization-webhook-cache-unauthorized-ttl ${cfg.authorization-webhook-cache-unauthorized-ttl}"} \
            ${optionalString (cfg.authorization-webhook-config-file != null) "--authorization-webhook-config-file ${cfg.authorization-webhook-config-file}"} \
            ${optionalString (cfg.authorization-webhook-version != null) "--authorization-webhook-version ${cfg.authorization-webhook-version}"} \
            ${optionalString (cfg.runtime-config != null) "--runtime-config \"${concatStringsSep "," cfg.runtime-config}\""} \
            ${optionalString (cfg.egress-selector-config-file != null) "--egress-selector-config-file ${cfg.egress-selector-config-file}"} \
            ${optionalString (cfg.admission-control != null) "--admission-control \"${concatStringsSep "," cfg.admission-control}\""} \
            ${optionalString (cfg.admission-control-config-file != null) "--admission-control-config-file ${cfg.admission-control-config-file}"} \
            ${optionalString (cfg.disable-admission-plugins != null) "--disable-admission-plugins \"${concatStringsSep "," cfg.disable-admission-plugins}\""} \
            ${optionalString (cfg.enable-admission-plugins != null) "--enable-admission-plugins \"${concatStringsSep "," cfg.enable-admission-plugins}\""} \
            ${optionalString (cfg.allow-metric-labels != null) "--allow-metric-labels \"${concatStringsSep "," cfg.allow-metric-labels}\""} \
            ${optionalString (cfg.allow-metric-labels-manifest != null) "--allow-metric-labels-manifest ${cfg.allow-metric-labels-manifest}"} \
            ${optionalString (cfg.disabled-metrics != null) "--disabled-metrics \"${concatStringsSep "," cfg.disabled-metrics}\""} \
            ${optionalString (cfg.show-hidden-metrics-for-version != null) "--show-hidden-metrics-for-version ${cfg.show-hidden-metrics-for-version}"} \
            ${optionalString (cfg.log-flush-frequency != null) "--log-flush-frequency ${cfg.log-flush-frequency}"} \
            ${optionalString (cfg.log-json-info-buffer-size != null) "--log-json-info-buffer-size ${cfg.log-json-info-buffer-size}"} \
            ${optionalString (cfg.log-json-split-stream != null) "--log-json-split-stream"} \
            ${optionalString (cfg.log-text-info-buffer-size != null) "--log-text-info-buffer-size ${cfg.log-text-info-buffer-size}"} \
            ${optionalString (cfg.log-text-split-stream != null) "--log-text-split-stream"} \
            ${optionalString (cfg.logging-format != null) "--logging-format ${cfg.logging-format}"} \
            ${optionalString (cfg.v != null) "--v ${toString cfg.v}"} \
            ${optionalString (cfg.vmodule != null) "--vmodule \"${concatStringsSep "," cfg.vmodule}\""} \
            ${optionalString (cfg.tracing-config-file != null) "--tracing-config-file ${cfg.tracing-config-file}"} \
            ${optionalString (cfg.aggregator-reject-forwarding-redirect != null) "--aggregator-reject-forwarding-redirect ${toString cfg.aggregator-reject-forwarding-redirect}"} \
            ${optionalString (cfg.allow-privileged != null) "--allow-privileged ${boolToString cfg.allow-privileged}"} \
            ${optionalString (cfg.enable-aggregator-routing != null) "--enable-aggregator-routing"} \
            ${optionalString (cfg.endpoint-reconciler-type != null) "--endpoint-reconciler-type ${cfg.endpoint-reconciler-type}"} \
            ${optionalString (cfg.event-ttl != null) "--event-ttl ${cfg.event-ttl}"} \
            ${optionalString (cfg.kubelet-certificate-authority != null) "--kubelet-certificate-authority ${cfg.kubelet-certificate-authority}"} \
            ${optionalString (cfg.kubelet-client-certificate != null) "--kubelet-client-certificate ${cfg.kubelet-client-certificate}"} \
            ${optionalString (cfg.kubelet-client-key != null) "--kubelet-client-key ${cfg.kubelet-client-key}"} \
            ${optionalString (cfg.kubelet-preferred-address-types != null) "--kubelet-preferred-address-types \"${concatStringsSep "," cfg.kubelet-preferred-address-types}\""} \
            ${optionalString (cfg.kubelet-timeout != null) "--kubelet-timeout ${cfg.kubelet-timeout}"} \
            ${optionalString (cfg.kubernetes-service-node-port != null) "--kubernetes-service-node-port ${toString cfg.kubernetes-service-node-port}"} \
            ${optionalString (cfg.max-connection-bytes-per-sec != null) "--max-connection-bytes-per-sec ${toString cfg.max-connection-bytes-per-sec}"} \
            ${optionalString (cfg.peer-advertise-ip != null) "--peer-advertise-ip ${cfg.peer-advertise-ip}"} \
            ${optionalString (cfg.peer-advertise-port != null) "--peer-advertise-port ${toString cfg.peer-advertise-port}"} \
            ${optionalString (cfg.peer-ca-file != null) "--peer-ca-file ${cfg.peer-ca-file}"} \
            ${optionalString (cfg.proxy-client-cert-file != null) "--proxy-client-cert-file ${cfg.proxy-client-cert-file}"} \
            ${optionalString (cfg.proxy-client-key-file != null) "--proxy-client-key-file ${cfg.proxy-client-key-file}"} \
            ${optionalString (cfg.service-account-signing-key-file != null) "--service-account-signing-key-file ${cfg.service-account-signing-key-file}"} \
            ${optionalString (cfg.service-cluster-ip-range != null) "--service-cluster-ip-range ${cfg.service-cluster-ip-range}"} \
            ${optionalString (cfg.service-node-port-range != null) "--service-node-port-range ${cfg.service-node-port-range}"}
            '';
        };
    };
  };
}
#+end_src

* kube-scheduler

#+begin_src nix :tangle kube-scheduler.nix
{
  config,
  pkgs,
  lib,
  ...
}:

with lib;

let
  cfg = config.services.kube-scheduler;
  boolToString = b: if b then "true" else "false";
  tls-sni-cert-key-items = if cfg.tls-sni-cert-key != null then map (item: "--tls-sni-cert-key ${item}") cfg.tls-sni-cert-key else [];
in
{
  options.services.kube-scheduler = {
    enable = mkOption {
      type = types.bool;
      default = false;
      description = "The Kubernetes scheduler is a control plane process which assigns Pods to Nodes. The scheduler determines which Nodes are valid placements for each Pod in the scheduling queue according to constraints and available resources. The scheduler then ranks each valid Node and binds the Pod to a suitable Node. Multiple different schedulers may be used within a cluster; kube-scheduler is the reference implementation. See https://kubernetes.io/docs/concepts/scheduling-eviction/ for more information about scheduling and the kube-scheduler component.";
    };

    # Misc flags
    configFile = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The path to the configuration file.";
    };

    master = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The address of the Kubernetes API server (overrides any value in kubeconfig)";
    };

    write-config-to = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "If set, write the configuration values to this file and exit.";
    };

    bind-address = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The IP address on which to listen for the --secure-port port. The associated interface(s) must be reachable by the rest of the cluster, and by CLI/web clients. If blank or an unspecified address (0.0.0.0 or ::), all interfaces and IP address families will be used. (default 0.0.0.0)";
    };

    cert-dir = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The directory where the TLS certs are located. If --tls-cert-file and --tls-private-key-file are provided, this flag will be ignored.";
    };

    http2-max-streams-per-connection = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The limit that the server gives to clients for the maximum number of streams in an HTTP/2 connection. Zero means to use golang's default.";
    };

    permit-address-sharing = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, SO_REUSEADDR will be used when binding the port. This allows binding to wildcard IPs like 0.0.0.0 and specific IPs in parallel, and it avoids waiting for the kernel to release sockets in TIME_WAIT state. [default=false]";
    };

    permit-port-sharing = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, SO_REUSEPORT will be used when binding the port, which allows more than one instance to bind on the same address and port. [default=false]";
    };

    secure-port = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The port on which to serve HTTPS with authentication and authorization. If 0, don't serve HTTPS at all. (default 10259)";
    };

    tls-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File containing the default x509 Certificate for HTTPS. (CA cert, if any, concatenated after server cert). If HTTPS serving is enabled, and --tls-cert-file and --tls-private-key-file are not provided, a self-signed certificate and key are generated for the public address and saved to the directory specified by --cert-dir.";
    };

    tls-cipher-suites = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "" "
Comma-separated list of cipher suites for the server. If omitted, the default Go cipher suites will be used.
Preferred values: TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256.
Insecure values: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_RC4_128_SHA, TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_RC4_128_SHA, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_RC4_128_SHA.
" "";
    };

    tls-min-version = mkOption {
      type = types.nullOr (types.enum [ "VersionTLS10" "VersionTLS11" "VersionTLS12" "VersionTLS13" ]);
      default = null;
      description = "Minimum TLS version supported. Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13";
    };

    tls-private-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File containing the default x509 private key matching --tls-cert-file.";
    };

    tls-sni-cert-key = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "A pair of x509 certificate and private key file paths, optionally suffixed with a list of domain patterns which are fully qualified domain names, possibly with prefixed wildcard segments. The domain patterns also allow IP addresses, but IPs should only be used if the apiserver has visibility to the IP address requested by a client. If no domain patterns are provided, the names of the certificate are extracted. Non-wildcard matches trump over wildcard matches, explicit domain patterns trump over extracted names. For multiple key/certificate pairs, use the --tls-sni-cert-key multiple times. Examples: 'example.crt,example.key' or 'foo.crt,foo.key:*.foo.com,foo.com'. (default [])";
    };

    # Authentication flags
    authentication-kubeconfig = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The kubeconfig file pointing at the 'core' kubernetes server with enough rights to create tokenreviews.authentication.k8s.io. This is optional. If empty, all token requests are considered to be anonymous and no client CA is looked up in the cluster.";
    };

    authentication-skip-lookup = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If false, the authentication-kubeconfig will be used to lookup missing authentication configuration from the cluster.";
    };

    authentication-token-webhook-cache-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache responses from the webhook token authenticator. (default 10s)";
    };

    authentication-tolerate-lookup-failure = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, failures to look up missing authentication configuration from the cluster are not considered fatal. Note that this can result in authentication that treats all requests as anonymous. (default true)";
    };

    client-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "If set, any request presenting a client certificate signed by one of the authorities in the client-ca-file is authenticated with an identity corresponding to the CommonName of the client certificate.";
    };

    requestheader-allowed-names = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of client certificate common names to allow to provide usernames in headers specified by --requestheader-username-headers. If empty, any client certificate validated by the authorities in --requestheader-client-ca-file is allowed.";
    };

    requestheader-client-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Root certificate bundle to use to verify client certificates on incoming requests before trusting usernames in headers specified by --requestheader-username-headers. WARNING: generally do not depend on authorization being already done for incoming requests.";
    };

    requestheader-extra-headers-prefix = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request header prefixes to inspect. X-Remote-Extra- is suggested. (default [x-remote-extra-])";
    };

    requestheader-group-headers = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request headers to inspect for groups. X-Remote-Group is suggested. (default [x-remote-group])";
    };

    requestheader-username-headers = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request headers to inspect for usernames. X-Remote-User is common. (default [x-remote-user])";
    };

    # Authorization flags
    authorization-always-allow-paths = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "A list of HTTP paths to skip during authorization, i.e. these are authorized without contacting the 'core' kubernetes server. (default [/healthz,/readyz,/livez])";
    };

    authorization-kubeconfig = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "kubeconfig file pointing at the 'core' kubernetes server with enough rights to create subjectaccessreviews.authorization.k8s.io. This is optional. If empty, all requests not skipped by authorization are forbidden.";
    };

    authorization-webhook-cache-authorized-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache 'authorized' responses from the webhook authorizer. (default 10s)";
    };

    authorization-webhook-cache-unauthorized-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache 'unauthorized' responses from the webhook authorizer. (default 10s)";
    };

    # Deprecated flags
    contention-profiling = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "DEPRECATED: enable block profiling, if profiling is enabled. This parameter is ignored if a config file is specified in --config. (default true)";
    };

    kube-api-burst = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "DEPRECATED: burst to use while talking with kubernetes apiserver. This parameter is ignored if a config file is specified in --config. (default 100)";
    };

    kube-api-content-type = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "DEPRECATED: content type of requests sent to apiserver. This parameter is ignored if a config file is specified in --config. (default 'application/vnd.kubernetes.protobuf')";
    };

    kube-api-qps = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "DEPRECATED: QPS to use while talking with kubernetes apiserver. This parameter is ignored if a config file is specified in --config. (default 50)";
    };

    kubeconfig = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "DEPRECATED: path to kubeconfig file with authorization and master location information. This parameter is ignored if a config file is specified in --config.";
    };

    pod-max-in-unschedulable-pods-duration = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "DEPRECATED: the maximum time a pod can stay in unschedulablePods. If a pod stays in unschedulablePods for longer than this value, the pod will be moved from unschedulablePods to backoffQ or activeQ. This flag is deprecated and will be removed in 1.26 (default 5m0s)";
    };

    profiling = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "DEPRECATED: enable profiling via web interface host:port/debug/pprof/. This parameter is ignored if a config file is specified in --config. (default true)";
    };

    # Leader election flags
    leader-elect = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Whether a leader election client and gain leadership before executing the main loop. Enable this when running replicated components for high availability. (default true)";
    };

    leader-elect-lease-duration = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration that non-leader candidates will wait after observing a leadership renewal until attempting to acquire leadership of a led but unrenewed leader slot. This is effectively the maximum duration that a leader can be stopped before it is replaced by another candidate. This is only applicable if leader election is enabled. (default 15s)";
    };

    leader-elect-renew-deadline = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The interval between attempts by the acting master to renew a leadership slot before it stops leading. This must be less than the lease duration. This is only applicable if leader election is enabled. (default 10s)";
    };

    leader-elect-resource-lock = mkOption {
      type = types.nullOr (types.enum [
        "leases"
        "endpointsleases"
        "configmapsleases"
      ]);
      default = null;
      description = "The type of resource object that is used for locking during leader election. Supported options are 'leases', 'endpointsleases' and 'configmapsleases'. (default 'leases')";
    };

    leader-elect-resource-name = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The name of resource object that is used for locking during leader election. (default 'kube-scheduler')";
    };

    leader-elect-resource-namespace = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The namespace of resource object that is used for locking during leader election. (default 'kube-system')";
    };

    leader-elect-retry-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration the clients should wait between attempting acquisition and renewal of a leadership. This is only applicable if leader election is enabled. (default 2s)";
    };

    feature-gates = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "" "
A set of key=value pairs that describe feature gates for alpha/experimental features. Options are:
                                      APIListChunking=true|false (BETA - default=true)
                                      APIPriorityAndFairness=true|false (BETA - default=true)
                                      APIResponseCompression=true|false (BETA - default=true)
                                      APIServerIdentity=true|false (BETA - default=true)
                                      APIServerTracing=true|false (BETA - default=true)
                                      AdmissionWebhookMatchConditions=true|false (BETA - default=true)
                                      AggregatedDiscoveryEndpoint=true|false (BETA - default=true)
                                      AllAlpha=true|false (ALPHA - default=false)
                                      AllBeta=true|false (BETA - default=false)
                                      AnyVolumeDataSource=true|false (BETA - default=true)
                                      AppArmor=true|false (BETA - default=true)
                                      CPUManagerPolicyAlphaOptions=true|false (ALPHA - default=false)
                                      CPUManagerPolicyBetaOptions=true|false (BETA - default=true)
                                      CPUManagerPolicyOptions=true|false (BETA - default=true)
                                      CRDValidationRatcheting=true|false (ALPHA - default=false)
                                      CSIMigrationPortworx=true|false (BETA - default=false)
                                      CSINodeExpandSecret=true|false (BETA - default=true)
                                      CSIVolumeHealth=true|false (ALPHA - default=false)
                                      CloudControllerManagerWebhook=true|false (ALPHA - default=false)
                                      CloudDualStackNodeIPs=true|false (ALPHA - default=false)
                                      ClusterTrustBundle=true|false (ALPHA - default=false)
                                      ComponentSLIs=true|false (BETA - default=true)
                                      ConsistentListFromCache=true|false (ALPHA - default=false)
                                      ContainerCheckpoint=true|false (ALPHA - default=false)
                                      ContextualLogging=true|false (ALPHA - default=false)
                                      CronJobsScheduledAnnotation=true|false (BETA - default=true)
                                      CrossNamespaceVolumeDataSource=true|false (ALPHA - default=false)
                                      CustomCPUCFSQuotaPeriod=true|false (ALPHA - default=false)
                                      CustomResourceValidationExpressions=true|false (BETA - default=true)
                                      DevicePluginCDIDevices=true|false (ALPHA - default=false)
                                      DisableCloudProviders=true|false (ALPHA - default=false)
                                      DisableKubeletCloudCredentialProviders=true|false (ALPHA - default=false)
                                      DynamicResourceAllocation=true|false (ALPHA - default=false)
                                      ElasticIndexedJob=true|false (BETA - default=true)
                                      EventedPLEG=true|false (ALPHA - default=false)
                                      GracefulNodeShutdown=true|false (BETA - default=true)
                                      GracefulNodeShutdownBasedOnPodPriority=true|false (BETA - default=true)
                                      HPAContainerMetrics=true|false (BETA - default=true)
                                      HPAScaleToZero=true|false (ALPHA - default=false)
                                      HonorPVReclaimPolicy=true|false (ALPHA - default=false)
                                      InPlacePodVerticalScaling=true|false (ALPHA - default=false)
                                      InTreePluginAWSUnregister=true|false (ALPHA - default=false)
                                      InTreePluginAzureDiskUnregister=true|false (ALPHA - default=false)
                                      InTreePluginAzureFileUnregister=true|false (ALPHA - default=false)
                                      InTreePluginGCEUnregister=true|false (ALPHA - default=false)
                                      InTreePluginOpenStackUnregister=true|false (ALPHA - default=false)
                                      InTreePluginPortworxUnregister=true|false (ALPHA - default=false)
                                      InTreePluginvSphereUnregister=true|false (ALPHA - default=false)
                                      JobBackoffLimitPerIndex=true|false (ALPHA - default=false)
                                      JobPodFailurePolicy=true|false (BETA - default=true)
                                      JobPodReplacementPolicy=true|false (ALPHA - default=false)
                                      JobReadyPods=true|false (BETA - default=true)
                                      KMSv2=true|false (BETA - default=true)
                                      KMSv2KDF=true|false (BETA - default=false)
                                      KubeProxyDrainingTerminatingNodes=true|false (ALPHA - default=false)
                                      KubeletCgroupDriverFromCRI=true|false (ALPHA - default=false)
                                      KubeletInUserNamespace=true|false (ALPHA - default=false)
                                      KubeletPodResourcesDynamicResources=true|false (ALPHA - default=false)
                                      KubeletPodResourcesGet=true|false (ALPHA - default=false)
                                      KubeletTracing=true|false (BETA - default=true)
                                      LegacyServiceAccountTokenCleanUp=true|false (ALPHA - default=false)
                                      LocalStorageCapacityIsolationFSQuotaMonitoring=true|false (ALPHA - default=false)
                                      LogarithmicScaleDown=true|false (BETA - default=true)
                                      LoggingAlphaOptions=true|false (ALPHA - default=false)
                                      LoggingBetaOptions=true|false (BETA - default=true)
                                      MatchLabelKeysInPodTopologySpread=true|false (BETA - default=true)
                                      MaxUnavailableStatefulSet=true|false (ALPHA - default=false)
                                      MemoryManager=true|false (BETA - default=true)
                                      MemoryQoS=true|false (ALPHA - default=false)
                                      MinDomainsInPodTopologySpread=true|false (BETA - default=true)
                                      MultiCIDRRangeAllocator=true|false (ALPHA - default=false)
                                      MultiCIDRServiceAllocator=true|false (ALPHA - default=false)
                                      NewVolumeManagerReconstruction=true|false (BETA - default=true)
                                      NodeInclusionPolicyInPodTopologySpread=true|false (BETA - default=true)
                                      NodeLogQuery=true|false (ALPHA - default=false)
                                      NodeSwap=true|false (BETA - default=false)
                                      OpenAPIEnums=true|false (BETA - default=true)
                                      PDBUnhealthyPodEvictionPolicy=true|false (BETA - default=true)
                                      PersistentVolumeLastPhaseTransitionTime=true|false (ALPHA - default=false)
                                      PodAndContainerStatsFromCRI=true|false (ALPHA - default=false)
                                      PodDeletionCost=true|false (BETA - default=true)
                                      PodDisruptionConditions=true|false (BETA - default=true)
                                      PodHostIPs=true|false (ALPHA - default=false)
                                      PodIndexLabel=true|false (BETA - default=true)
                                      PodReadyToStartContainersCondition=true|false (ALPHA - default=false)
                                      PodSchedulingReadiness=true|false (BETA - default=true)
                                      ProcMountType=true|false (ALPHA - default=false)
                                      QOSReserved=true|false (ALPHA - default=false)
                                      ReadWriteOncePod=true|false (BETA - default=true)
                                      RecoverVolumeExpansionFailure=true|false (ALPHA - default=false)
                                      RemainingItemCount=true|false (BETA - default=true)
                                      RotateKubeletServerCertificate=true|false (BETA - default=true)
                                      SELinuxMountReadWriteOncePod=true|false (BETA - default=true)
                                      SchedulerQueueingHints=true|false (BETA - default=false)
                                      SecurityContextDeny=true|false (ALPHA - default=false)
                                      SeparateCacheWatchRPC=true|false (BETA - default=true)
                                      ServiceNodePortStaticSubrange=true|false (BETA - default=true)
                                      SidecarContainers=true|false (ALPHA - default=false)
                                      SizeMemoryBackedVolumes=true|false (BETA - default=true)
                                      SkipReadOnlyValidationGCE=true|false (ALPHA - default=false)
                                      StableLoadBalancerNodeSet=true|false (BETA - default=true)
                                      StatefulSetAutoDeletePVC=true|false (BETA - default=true)
                                      StatefulSetStartOrdinal=true|false (BETA - default=true)
                                      StorageVersionAPI=true|false (ALPHA - default=false)
                                      StorageVersionHash=true|false (BETA - default=true)
                                      TopologyAwareHints=true|false (BETA - default=true)
                                      TopologyManagerPolicyAlphaOptions=true|false (ALPHA - default=false)
                                      TopologyManagerPolicyBetaOptions=true|false (BETA - default=true)
                                      TopologyManagerPolicyOptions=true|false (BETA - default=true)
                                      UnauthenticatedHTTP2DOSMitigation=true|false (BETA - default=false)
                                      UnknownVersionInteroperabilityProxy=true|false (ALPHA - default=false)
                                      UserNamespacesSupport=true|false (ALPHA - default=false)
                                      ValidatingAdmissionPolicy=true|false (BETA - default=false)
                                      VolumeCapacityPriority=true|false (ALPHA - default=false)
                                      WatchFromStorageWithoutResourceVersion=true|false (BETA - default=false)
                                      WatchList=true|false (ALPHA - default=false)
                                      WinDSR=true|false (ALPHA - default=false)
                                      WinOverlay=true|false (BETA - default=true)
                                      WindowsHostNetwork=true|false (ALPHA - default=true)
"" ";
    };

    # Metrics flags
    allow-metric-labels = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "The map from metric-label to value allow-list of this label. The key's format is <MetricName>,<LabelName>. The value's format is <allowed_value>,<allowed_value>...e.g. metric1,label1='v1,v2,v3', metric1,label2='v1,v2,v3' metric2,label1='v1,v2,v3'. (default [])";
    };

    disabled-metrics = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "This flag provides an escape hatch for misbehaving metrics. You must provide the fully qualified metric name in order to disable it. Disclaimer: disabling metrics is higher in precedence than showing hidden metrics.";
    };

    show-hidden-metrics-for-version = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The previous version for which you want to show hidden metrics. Only the previous minor version is meaningful, other values will not be allowed. The format is <major>.<minor>, e.g.: '1.16'. The purpose of this format is make sure you have the opportunity to notice if the next release hides additional metrics, rather than being surprised when they are permanently removed in the release after that.";
    };

    # Logs flags
    log-flush-frequency = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Maximum number of seconds between log flushes (default 5s)";
    };

    log-json-info-buffer-size = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "[Alpha] In JSON format with split output streams, the info messages can be buffered for a while to increase performance. The default value of zero bytes disables buffering. The size can be specified as number of bytes (512), multiples of 1000 (1K), multiples of 1024 (2Ki), or powers of those (3M, 4G, 5Mi, 6Gi). Enable the LoggingAlphaOptions feature gate to use this.";
    };

    log-json-split-stream = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "In JSON format, write error messages to stderr and info messages to stdout. The default is to write a single stream to stdout. Enable the LoggingAlphaOptions feature gate to use this.";
    };

    logging-format = mkOption {
      type = types.nullOr (types.enum [ "json" "text" ]);
      default = null;
      description = "Sets the log format. Permitted formats: 'json' (gated by LoggingBetaOptions), 'text'. (default 'text')";
    };

    v = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "number for the log level verbosity";
    };

    vmodule = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "comma-separated list of pattern=N settings for file-filtered logging (only works for text log format)";
    };
  };

  config = mkIf cfg.enable {
    systemd.services.kube-scheduler = {
      description = "The Kubernetes scheduler is a control plane process which assigns Pods to Nodes. The scheduler determines which Nodes are valid placements for each Pod in the scheduling queue according to constraints and available resources. The scheduler then ranks each valid Node and binds the Pod to a suitable Node. Multiple different schedulers may be used within a cluster; kube-scheduler is the reference implementation. See https://kubernetes.io/docs/concepts/scheduling-eviction/ for more information about scheduling and the kube-scheduler component.";
      after = [ "network.target" ];
      wantedBy = [ "multi-user.target" ];

      serviceConfig = {
        ExecStart = ''
          ${pkgs.coreutils}/bin/echo ${pkgs.kubernetes}/bin/kube-scheduler \
            ${optionalString (cfg.configFile != null) "--config ${cfg.configFile}"} \
            ${optionalString (cfg.master != null) "--master ${cfg.master}"} \
            ${optionalString (cfg.write-config-to != null) "--write-config-to ${cfg.write-config-to}"} \
            ${optionalString (cfg.bind-address != null) "--bind-address ${cfg.bind-address}"} \
            ${optionalString (cfg.cert-dir != null) "--cert-dir ${cfg.cert-dir}"} \
            ${optionalString (cfg.http2-max-streams-per-connection != null) "--http2-max-streams-per-connection ${toString cfg.http2-max-streams-per-connection}"} \
            ${optionalString (cfg.permit-address-sharing != null) "--permit-address-sharing ${boolToString cfg.permit-address-sharing}"} \
            ${optionalString (cfg.permit-port-sharing != null) "--permit-port-sharing ${boolToString cfg.permit-port-sharing}"} \
            ${optionalString (cfg.secure-port != null) "--secure-port ${toString cfg.secure-port}"} \
            ${optionalString (cfg.tls-cert-file != null) "--tls-cert-file ${cfg.tls-cert-file}"} \
            ${optionalString (cfg.tls-cipher-suites != null) "--tls-cipher-suites \"${concatStringsSep "," cfg.tls-cipher-suites}\""} \
            ${optionalString (cfg.tls-min-version != null) "--tls-min-version ${cfg.tls-min-version}"} \
            ${optionalString (cfg.tls-private-key-file != null) "--tls-private-key-file ${cfg.tls-private-key-file}"} \
            ${concatStringsSep " " tls-sni-cert-key-items} \
            ${optionalString (cfg.authentication-kubeconfig != null) "--authentication-kubeconfig ${cfg.authentication-kubeconfig}"} \
            ${optionalString (cfg.authentication-skip-lookup != null) "--authentication-skip-lookup ${boolToString cfg.authentication-skip-lookup}"} \
            ${optionalString (cfg.authentication-token-webhook-cache-ttl != null) "--authentication-token-webhook-cache-ttl ${cfg.authentication-token-webhook-cache-ttl}"} \
            ${optionalString (cfg.authentication-tolerate-lookup-failure != null) "--authentication-tolerate-lookup-failure ${boolToString cfg.authentication-tolerate-lookup-failure}"} \
            ${optionalString (cfg.client-ca-file != null) "--client-ca-file ${cfg.client-ca-file}"} \
            ${optionalString (cfg.requestheader-allowed-names != null) "--requestheader-allowed-names \"${concatStringsSep "," cfg.requestheader-allowed-names}\""} \
            ${optionalString (cfg.requestheader-client-ca-file != null) "--requestheader-client-ca-file ${cfg.requestheader-client-ca-file}"} \
            ${optionalString (cfg.requestheader-extra-headers-prefix != null) "--requestheader-extra-headers-prefix  \"${concatStringsSep "," cfg.requestheader-extra-headers-prefix}\""} \
            ${optionalString (cfg.requestheader-group-headers != null) "--requestheader-group-headers \"${concatStringsSep "," cfg.requestheader-group-headers}\""} \
            ${optionalString (cfg.requestheader-username-headers != null) "--requestheader-username-headers \"${concatStringsSep "," cfg.requestheader-username-headers}\""} \
            ${optionalString (cfg.authorization-always-allow-paths != null) "--authorization-always-allow-paths \"${concatStringsSep "," cfg.authorization-always-allow-paths}\""} \
            ${optionalString (cfg.authorization-kubeconfig != null) "--authorization-kubeconfig ${cfg.authorization-kubeconfig}"} \
            ${optionalString (cfg.authorization-webhook-cache-authorized-ttl != null) "--authorization-webhook-cache-authorized-ttl ${cfg.authorization-webhook-cache-authorized-ttl}"} \
            ${optionalString (cfg.authorization-webhook-cache-unauthorized-ttl != null) "--authorization-webhook-cache-unauthorized-ttl ${cfg.authorization-webhook-cache-unauthorized-ttl}"} \
            ${optionalString (cfg.contention-profiling != null) "--contention-profiling ${boolToString cfg.contention-profiling}"} \
            ${optionalString (cfg.kube-api-burst != null) "--kube-api-burst ${toString cfg.kube-api-burst}"} \
            ${optionalString (cfg.kube-api-content-type != null) "--kube-api-content-type ${cfg.kube-api-content-type}"} \
            ${optionalString (cfg.kube-api-qps != null) "--kube-api-qps ${toString cfg.kube-api-qps}"} \
            ${optionalString (cfg.kubeconfig != null) "--kubeconfig ${cfg.kubeconfig}"} \
            ${optionalString (cfg.pod-max-in-unschedulable-pods-duration != null) "--pod-max-in-unschedulable-pods-duration ${cfg.pod-max-in-unschedulable-pods-duration}"} \
            ${optionalString (cfg.profiling != null) "--profiling ${boolToString cfg.profiling}"} \
            ${optionalString (cfg.leader-elect != null) "--leader-elect ${boolToString cfg.leader-elect}"} \
            ${optionalString (cfg.leader-elect-lease-duration != null) "--leader-elect-lease-duration ${cfg.leader-elect-lease-duration}"} \
            ${optionalString (cfg.leader-elect-renew-deadline != null) "--leader-elect-renew-deadline ${cfg.leader-elect-renew-deadline}"} \
            ${optionalString (cfg.leader-elect-resource-lock != null) "--leader-elect-resource-lock ${cfg.leader-elect-resource-lock}"} \
            ${optionalString (cfg.leader-elect-resource-name != null) "--leader-elect-resource-name ${cfg.leader-elect-resource-name}"} \
            ${optionalString (cfg.leader-elect-resource-namespace != null) "--leader-elect-resource-namespace ${cfg.leader-elect-resource-namespace}"} \
            ${optionalString (cfg.leader-elect-retry-period != null) "--leader-elect-retry-period ${cfg.leader-elect-retry-period}"} \
            ${optionalString (cfg.feature-gates != null) "--feature-gates \"${concatStringsSep "," cfg.feature-gates}\""} \
            ${optionalString (cfg.allow-metric-labels != null) "--allow-metric-labels \"${concatStringsSep "," cfg.allow-metric-labels}\""} \
            ${optionalString (cfg.disabled-metrics != null) "--disabled-metrics \"${concatStringsSep "," cfg.disabled-metrics}\""} \
            ${optionalString (cfg.show-hidden-metrics-for-version != null) "--show-hidden-metrics-for-version ${cfg.show-hidden-metrics-for-version}"} \
            ${optionalString (cfg.log-flush-frequency != null) "--log-flush-frequency ${cfg.log-flush-frequency}"} \
            ${optionalString (cfg.log-json-info-buffer-size != null) "--log-json-info-buffer-size ${cfg.log-json-info-buffer-size}"} \
            ${optionalString (cfg.log-json-split-stream != null) "--log-json-split-stream"} \
            ${optionalString (cfg.logging-format != null) "--logging-format ${cfg.logging-format}"} \
            ${optionalString (cfg.v != null) "--v ${toString cfg.v}"} \
            ${optionalString (cfg.vmodule != null) "--vmodule \"${concatStringsSep "," cfg.vmodule}\""}
            '';
      };
    };
  };
}
#+end_src

* kube-controller-manager

#+begin_src nix :tangle kube-controller-manager.nix
{
  config,
  pkgs,
  lib,
  ...
}:

with lib;

let
  cfg = config.services.kube-controller-manager;
  boolToString = b: if b then "true" else "false";
in
{
  options.services.kube-controller-manager = {
    enable = mkOption {
      type = types.bool;
      default = false;
      description = "The Kubernetes controller manager is a daemon that embeds the core control loops shipped with Kubernetes. In applications of robotics and automation, a control loop is a non-terminating loop that regulates the state of the system. In Kubernetes, a controller is a control loop that watches the shared state of the cluster through the apiserver and makes changes attempting to move the current state towards the desired state. Examples of controllers that ship with Kubernetes today are the replication controller, endpoints controller, namespace controller, and serviceaccounts controller.";
    };

    contention-profiling = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enable block profiling, if profiling is enabled";
    };

    profiling = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enable profiling via web interface host:port/debug/pprof/ (default true)";
    };

    enable-leader-migration = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Whether to enable controller leader migration.";
    };

    leader-migration-config = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Path to the config file for controller leader migration, or empty to use the value that reflects default configuration of the controller manager. The config file should be of type LeaderMigrationConfiguration, group controllermanager.config.k8s.io, version v1alpha1.";
    };

    allocate-node-cidrs = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Should CIDRs for Pods be allocated and set on the cloud provider.";
    };

    cidr-allocator-type = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Type of CIDR allocator to use (default 'RangeAllocator')";
    };

    cloud-config = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The path to the cloud provider configuration file. Empty string for no configuration file.";
    };

    cloud-provider = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The provider for cloud services. Empty string for no provider.";
    };

    cluster-cidr = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "CIDR Range for Pods in cluster. Requires --allocate-node-cidrs to be true";
    };

    cluster-name = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The instance prefix for the cluster. (default 'kubernetes')";
    };

    configure-cloud-routes = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Should CIDRs allocated by allocate-node-cidrs be configured on the cloud provider. (default true)";
    };

    controller-start-interval = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Interval between starting controller managers.";
    };

    controllers = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "A list of controllers to enable. '*' enables all on-by-default controllers, 'foo' enables the controller named 'foo', '-foo' disables the controller named 'foo'.";
    };

    external-cloud-volume-plugin = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The plugin to use when cloud provider is set to external. Can be empty, should only be set when cloud-provider is external. Currently used to allow node-ipam-controller, persistentvolume-binder-controller, persistentvolume-expander-controller and attach-detach-controller to work for in tree cloud providers.";
    };

    feature-gates = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = """
A set of key=value pairs that describe feature gates for alpha/experimental features. Options are:
  APIListChunking=true|false (BETA - default=true)
  APIPriorityAndFairness=true|false (BETA - default=true)
  APIResponseCompression=true|false (BETA - default=true)
  APIServerIdentity=true|false (BETA - default=true)
  APIServerTracing=true|false (BETA - default=true)
  AdmissionWebhookMatchConditions=true|false (BETA - default=true)
  AggregatedDiscoveryEndpoint=true|false (BETA - default=true)
  AllAlpha=true|false (ALPHA - default=false)
  AllBeta=true|false (BETA - default=false)
  AnyVolumeDataSource=true|false (BETA - default=true)
  AppArmor=true|false (BETA - default=true)
  CPUManagerPolicyAlphaOptions=true|false (ALPHA - default=false)
  CPUManagerPolicyBetaOptions=true|false (BETA - default=true)
  CPUManagerPolicyOptions=true|false (BETA - default=true)
  CRDValidationRatcheting=true|false (ALPHA - default=false)
  CSIMigrationPortworx=true|false (BETA - default=false)
  CSINodeExpandSecret=true|false (BETA - default=true)
  CSIVolumeHealth=true|false (ALPHA - default=false)
  CloudControllerManagerWebhook=true|false (ALPHA - default=false)
  CloudDualStackNodeIPs=true|false (ALPHA - default=false)
  ClusterTrustBundle=true|false (ALPHA - default=false)
  ComponentSLIs=true|false (BETA - default=true)
  ConsistentListFromCache=true|false (ALPHA - default=false)
  ContainerCheckpoint=true|false (ALPHA - default=false)
  ContextualLogging=true|false (ALPHA - default=false)
  CronJobsScheduledAnnotation=true|false (BETA - default=true)
  CrossNamespaceVolumeDataSource=true|false (ALPHA - default=false)
  CustomCPUCFSQuotaPeriod=true|false (ALPHA - default=false)
  CustomResourceValidationExpressions=true|false (BETA - default=true)
  DevicePluginCDIDevices=true|false (ALPHA - default=false)
  DisableCloudProviders=true|false (ALPHA - default=false)
  DisableKubeletCloudCredentialProviders=true|false (ALPHA - default=false)
  DynamicResourceAllocation=true|false (ALPHA - default=false)
  ElasticIndexedJob=true|false (BETA - default=true)
  EventedPLEG=true|false (ALPHA - default=false)
  GracefulNodeShutdown=true|false (BETA - default=true)
  GracefulNodeShutdownBasedOnPodPriority=true|false (BETA - default=true)
  HPAContainerMetrics=true|false (BETA - default=true)
  HPAScaleToZero=true|false (ALPHA - default=false)
  HonorPVReclaimPolicy=true|false (ALPHA - default=false)
  InPlacePodVerticalScaling=true|false (ALPHA - default=false)
  InTreePluginAWSUnregister=true|false (ALPHA - default=false)
  InTreePluginAzureDiskUnregister=true|false (ALPHA - default=false)
  InTreePluginAzureFileUnregister=true|false (ALPHA - default=false)
  InTreePluginGCEUnregister=true|false (ALPHA - default=false)
  InTreePluginOpenStackUnregister=true|false (ALPHA - default=false)
  InTreePluginPortworxUnregister=true|false (ALPHA - default=false)
  InTreePluginvSphereUnregister=true|false (ALPHA - default=false)
  JobBackoffLimitPerIndex=true|false (ALPHA - default=false)
  JobPodFailurePolicy=true|false (BETA - default=true)
  JobPodReplacementPolicy=true|false (ALPHA - default=false)
  JobReadyPods=true|false (BETA - default=true)
  KMSv2=true|false (BETA - default=true)
  KMSv2KDF=true|false (BETA - default=false)
  KubeProxyDrainingTerminatingNodes=true|false (ALPHA - default=false)
  KubeletCgroupDriverFromCRI=true|false (ALPHA - default=false)
  KubeletInUserNamespace=true|false (ALPHA - default=false)
  KubeletPodResourcesDynamicResources=true|false (ALPHA - default=false)
  KubeletPodResourcesGet=true|false (ALPHA - default=false)
  KubeletTracing=true|false (BETA - default=true)
  LegacyServiceAccountTokenCleanUp=true|false (ALPHA - default=false)
  LocalStorageCapacityIsolationFSQuotaMonitoring=true|false (ALPHA - default=false)
  LogarithmicScaleDown=true|false (BETA - default=true)
  LoggingAlphaOptions=true|false (ALPHA - default=false)
  LoggingBetaOptions=true|false (BETA - default=true)
  MatchLabelKeysInPodTopologySpread=true|false (BETA - default=true)
  MaxUnavailableStatefulSet=true|false (ALPHA - default=false)
  MemoryManager=true|false (BETA - default=true)
  MemoryQoS=true|false (ALPHA - default=false)
  MinDomainsInPodTopologySpread=true|false (BETA - default=true)
  MultiCIDRRangeAllocator=true|false (ALPHA - default=false)
  MultiCIDRServiceAllocator=true|false (ALPHA - default=false)
  NewVolumeManagerReconstruction=true|false (BETA - default=true)
  NodeInclusionPolicyInPodTopologySpread=true|false (BETA - default=true)
  NodeLogQuery=true|false (ALPHA - default=false)
  NodeSwap=true|false (BETA - default=false)
  OpenAPIEnums=true|false (BETA - default=true)
  PDBUnhealthyPodEvictionPolicy=true|false (BETA - default=true)
  PersistentVolumeLastPhaseTransitionTime=true|false (ALPHA - default=false)
  PodAndContainerStatsFromCRI=true|false (ALPHA - default=false)
  PodDeletionCost=true|false (BETA - default=true)
  PodDisruptionConditions=true|false (BETA - default=true)
  PodHostIPs=true|false (ALPHA - default=false)
  PodIndexLabel=true|false (BETA - default=true)
  PodReadyToStartContainersCondition=true|false (ALPHA - default=false)
  PodSchedulingReadiness=true|false (BETA - default=true)
  ProcMountType=true|false (ALPHA - default=false)
  QOSReserved=true|false (ALPHA - default=false)
  ReadWriteOncePod=true|false (BETA - default=true)
  RecoverVolumeExpansionFailure=true|false (ALPHA - default=false)
  RemainingItemCount=true|false (BETA - default=true)
  RotateKubeletServerCertificate=true|false (BETA - default=true)
  SELinuxMountReadWriteOncePod=true|false (BETA - default=true)
  SchedulerQueueingHints=true|false (BETA - default=false)
  SecurityContextDeny=true|false (ALPHA - default=false)
  SeparateCacheWatchRPC=true|false (BETA - default=true)
  ServiceNodePortStaticSubrange=true|false (BETA - default=true)
  SidecarContainers=true|false (ALPHA - default=false)
  SizeMemoryBackedVolumes=true|false (BETA - default=true)
  SkipReadOnlyValidationGCE=true|false (ALPHA - default=false)
  StableLoadBalancerNodeSet=true|false (BETA - default=true)
  StatefulSetAutoDeletePVC=true|false (BETA - default=true)
  StatefulSetStartOrdinal=true|false (BETA - default=true)
  StorageVersionAPI=true|false (ALPHA - default=false)
  StorageVersionHash=true|false (BETA - default=true)
  TopologyAwareHints=true|false (BETA - default=true)
  TopologyManagerPolicyAlphaOptions=true|false (ALPHA - default=false)
  TopologyManagerPolicyBetaOptions=true|false (BETA - default=true)
  TopologyManagerPolicyOptions=true|false (BETA - default=true)
  UnauthenticatedHTTP2DOSMitigation=true|false (BETA - default=false)
  UnknownVersionInteroperabilityProxy=true|false (ALPHA - default=false)
  UserNamespacesSupport=true|false (ALPHA - default=false)
  ValidatingAdmissionPolicy=true|false (BETA - default=false)
  VolumeCapacityPriority=true|false (ALPHA - default=false)
  WatchFromStorageWithoutResourceVersion=true|false (BETA - default=false)
  WatchList=true|false (ALPHA - default=false)
  WinDSR=true|false (ALPHA - default=false)
  WinOverlay=true|false (BETA - default=true)
  WindowsHostNetwork=true|false (ALPHA - default=true)
""";
    };

    kube-api-burst = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Burst to use while talking with kubernetes apiserver. (default 30)";
    };

    kube-api-content-type = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "string             Content type of requests sent to apiserver. (default "application/vnd.kubernetes.protobuf")";
    };

    kube-api-qps = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "QPS to use while talking with kubernetes apiserver. (default 20)";
    };

    leader-elect = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Start a leader election client and gain leadership before executing the main loop. Enable this when running replicated components for high availability. (default true)";
    };

    leader-elect-lease-duration = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration that non-leader candidates will wait after observing a leadership renewal until attempting to acquire leadership of a led but unrenewed leader slot. This is effectively the maximum duration that a leader can be stopped before it is replaced by another candidate. This is only applicable if leader election is enabled. (default 15s)";
    };

    leader-elect-renew-deadline = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The interval between attempts by the acting master to renew a leadership slot before it stops leading. This must be less than the lease duration. This is only applicable if leader election is enabled. (default 10s)";
    };

    leader-elect-resource-lock = mkOption {
      type = types.nullOr (types.enum [ "leases" "endpointsleases" "configmapsleases" ]);
      default = null;
      description = "The type of resource object that is used for locking during leader election. Supported options are 'leases', 'endpointsleases' and 'configmapsleases'. (default 'leases')";
    };

    leader-elect-resource-name = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The name of resource object that is used for locking during leader election. (default 'kube-controller-manager')";
    };

    leader-elect-resource-namespace = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The namespace of resource object that is used for locking during leader election. (default 'kube-system')";
    };

    leader-elect-retry-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration the clients should wait between attempting acquisition and renewal of a leadership. This is only applicable if leader election is enabled. (default 2s)";
    };

    min-resync-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The resync period in reflectors will be random between MinResyncPeriod and 2*MinResyncPeriod. (default 12h0m0s)";
    };

    node-monitor-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period for syncing NodeStatus in cloud-node-lifecycle-controller. (default 5s)";
    };

    route-reconciliation-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period for reconciling routes created for Nodes by cloud provider. (default 10s)";
    };

    use-service-account-credentials = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, use individual service account credentials for each controller.";
    };

    concurrent-service-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of services that are allowed to sync concurrently. Larger number = more responsive service management, but more CPU (and network) load (default 1)";
    };

    bind-address = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The IP address on which to listen for the --secure-port port. The associated interface(s) must be reachable by the rest of the cluster, and by CLI/web clients. If blank or an unspecified address (0.0.0.0 or ::), all interfaces and IP address families will be used. (default 0.0.0.0)";
    };

    cert-dir = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The directory where the TLS certs are located. If --tls-cert-file and --tls-private-key-file are provided, this flag will be ignored.";
    };

    http2-max-streams-per-connection = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The limit that the server gives to clients for the maximum number of streams in an HTTP/2 connection. Zero means to use golang's default.";
    };

    permit-address-sharing = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, SO_REUSEADDR will be used when binding the port. This allows binding to wildcard IPs like 0.0.0.0 and specific IPs in parallel, and it avoids waiting for the kernel to release sockets in TIME_WAIT state. [default=false]";
    };

    permit-port-sharing = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, SO_REUSEPORT will be used when binding the port, which allows more than one instance to bind on the same address and port. [default=false]";
    };

    secure-port = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The port on which to serve HTTPS with authentication and authorization. If 0, don't serve HTTPS at all. (default 10257)";
    };

    tls-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File containing the default x509 Certificate for HTTPS. (CA cert, if any, concatenated after server cert). If HTTPS serving is enabled, and --tls-cert-file and --tls-private-key-file are not provided, a self-signed certificate and key are generated for the public address and saved to the directory specified by --cert-dir.";
    };

    tls-cipher-suites = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of cipher suites for the server. If omitted, the default Go cipher suites will be used. ";
    };

    tls-min-version = mkOption {
      type = types.nullOr (types.enum [ "VersionTLS10" "VersionTLS11" "VersionTLS12" "VersionTLS13" ]);
      default = null;
      description = "Minimum TLS version supported. Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13";
    };

    tls-private-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "File containing the default x509 private key matching --tls-cert-file.";
    };

    tls-sni-cert-key = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "A pair of x509 certificate and private key file paths, optionally suffixed with a list of domain patterns which are fully qualified domain names, possibly with prefixed wildcard segments. The domain patterns also allow IP addresses, but IPs should only be used if the apiserver has visibility to the IP address requested by a client. If no domain patterns are provided, the names of the certificate are extracted. Non-wildcard matches trump over wildcard matches, explicit domain patterns trump over extracted names. For multiple key/certificate pairs, use the --tls-sni-cert-key multiple times. Examples: 'example.crt,example.key' or 'foo.crt,foo.key:*.foo.com,foo.com'. (default [])";
    };

    authentication-kubeconfig = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "kubeconfig file pointing at the 'core' kubernetes server with enough rights to create tokenreviews.authentication.k8s.io. This is optional. If empty, all token requests are considered to be anonymous and no client CA is looked up in the cluster.";
    };

    authentication-skip-lookup = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If false, the authentication-kubeconfig will be used to lookup missing authentication configuration from the cluster.";
    };

    authentication-token-webhook-cache-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache responses from the webhook token authenticator. (default 10s)";
    };

    authentication-tolerate-lookup-failure = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "If true, failures to look up missing authentication configuration from the cluster are not considered fatal. Note that this can result in authentication that treats all requests as anonymous.";
    };

    client-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "If set, any request presenting a client certificate signed by one of the authorities in the client-ca-file is authenticated with an identity corresponding to the CommonName of the client certificate.";
    };

    requestheader-allowed-names = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of client certificate common names to allow to provide usernames in headers specified by --requestheader-username-headers. If empty, any client certificate validated by the authorities in --requestheader-client-ca-file is allowed.";
    };

    requestheader-client-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Root certificate bundle to use to verify client certificates on incoming requests before trusting usernames in headers specified by --requestheader-username-headers. WARNING: generally do not depend on authorization being already done for incoming requests.";
    };

    requestheader-extra-headers-prefix = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request header prefixes to inspect. X-Remote-Extra- is suggested. (default [x-remote-extra-])";
    };

    requestheader-group-headers = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request headers to inspect for groups. X-Remote-Group is suggested. (default [x-remote-group])";
    };

    requestheader-username-headers = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of request headers to inspect for usernames. X-Remote-User is common. (default [x-remote-user])";
    };

    authorization-always-allow-paths = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "A list of HTTP paths to skip during authorization, i.e. these are authorized without contacting the 'core' kubernetes server. (default [/healthz,/readyz,/livez])";
    };

    authorization-kubeconfig = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "kubeconfig file pointing at the 'core' kubernetes server with enough rights to create subjectaccessreviews.authorization.k8s.io. This is optional. If empty, all requests not skipped by authorization are forbidden.";
    };

    authorization-webhook-cache-authorized-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache 'authorized' responses from the webhook authorizer. (default 10s)";
    };

    authorization-webhook-cache-unauthorized-ttl = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The duration to cache 'unauthorized' responses from the webhook authorizer. (default 10s)";
    };

    attach-detach-reconcile-sync-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The reconciler sync wait time between volume attach detach. This duration must be larger than one second, and increasing this value from the default may allow for volumes to be mismatched with pods. (default 1m0s)";
    };

    disable-attach-detach-reconcile-sync = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Disable volume attach detach reconciler sync. Disabling this may cause volumes to be mismatched with pods. Use wisely.";
    };

    cluster-signing-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded X509 CA certificate used to issue cluster-scoped certificates.  If specified, no more specific --cluster-signing-* flag may be specified.";
    };

    cluster-signing-duration = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The max length of duration signed certificates will be given.  Individual CSRs may request shorter certs by setting spec.expirationSeconds. (default 8760h0m0s)";
    };

    cluster-signing-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded RSA or ECDSA private key used to sign cluster-scoped certificates.  If specified, no more specific --cluster-signing-* flag may be specified.";
    };

    cluster-signing-kube-apiserver-client-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded X509 CA certificate used to issue certificates for the kubernetes.io/kube-apiserver-client signer.  If specified, --cluster-signing-{cert,key}-file must not be set.";
    };

    cluster-signing-kube-apiserver-client-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded RSA or ECDSA private key used to sign certificates for the kubernetes.io/kube-apiserver-client signer.  If specified, --cluster-signing-{cert,key}-file must not be set.";
    };

    cluster-signing-kubelet-client-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded X509 CA certificate used to issue certificates for the kubernetes.io/kube-apiserver-client-kubelet signer.  If specified, --cluster-signing-{cert,key}-file must not be set.";
    };

    cluster-signing-kubelet-client-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "pathFilename containing a PEM-encoded RSA or ECDSA private key used to sign certificates for the kubernetes.io/kube-apiserver-client-kubelet signer.  If specified, --cluster-signing-{cert,key}-file must not be set.";
    };

    cluster-signing-kubelet-serving-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded X509 CA certificate used to issue certificates for the kubernetes.io/kubelet-serving signer.  If specified, --cluster-signing-{cert,key}-file must not be set.";
    };

    cluster-signing-kubelet-serving-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded RSA or ECDSA private key used to sign certificates for the kubernetes.io/kubelet-serving signer.  If specified, --cluster-signing-{cert,key}-file must not be set.";
    };

    cluster-signing-legacy-unknown-cert-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded X509 CA certificate used to issue certificates for the kubernetes.io/legacy-unknown signer.  If specified, --cluster-signing-{cert,key}-file must not be set.";
    };

    cluster-signing-legacy-unknown-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded RSA or ECDSA private key used to sign certificates for the kubernetes.io/legacy-unknown signer.  If specified, --cluster-signing-{cert,key}-file must not be set.";
    };

    concurrent-deployment-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of deployment objects that are allowed to sync concurrently. Larger number = more responsive deployments, but more CPU (and network) load (default 5)";
    };

    concurrent-statefulset-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of statefulset objects that are allowed to sync concurrently. Larger number = more responsive statefulsets, but more CPU (and network) load (default 5)";
    };

    concurrent-endpoint-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of endpoint syncing operations that will be done concurrently. Larger number = faster endpoint updating, but more CPU (and network) load (default 5)";
    };

    endpoint-updates-batch-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The length of endpoint updates batching period. Processing of pod changes will be delayed by this duration to join them with potential upcoming updates and reduce the overall number of endpoints updates. Larger number = higher endpoint programming latency, but lower number of endpoints revision generated";
    };

    concurrent-service-endpoint-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of service endpoint syncing operations that will be done concurrently. Larger number = faster endpoint slice updating, but more CPU (and network) load. Defaults to 5. (default 5)";
    };

    endpointslice-updates-batch-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The length of endpoint slice updates batching period. Processing of pod changes will be delayed by this duration to join them with potential upcoming updates and reduce the overall number of endpoints updates. Larger number = higher endpoint programming latency, but lower number of endpoints revision generated";
    };

    max-endpoints-per-slice = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The maximum number of endpoints that will be added to an EndpointSlice. More endpoints per slice will result in less endpoint slices, but larger resources. Defaults to 100. (default 100)";
    };

    mirroring-concurrent-service-endpoint-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of service endpoint syncing operations that will be done concurrently by the endpointslice-mirroring-controller. Larger number = faster endpoint slice updating, but more CPU (and network) load. Defaults to 5. (default 5)";
    };

    mirroring-endpointslice-updates-batch-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The length of EndpointSlice updates batching period for endpointslice-mirroring-controller. Processing of EndpointSlice changes will be delayed by this duration to join them with potential upcoming updates and reduce the overall number of EndpointSlice updates. Larger number = higher endpoint programming latency, but lower number of endpoints revision generated";
    };

    mirroring-max-endpoints-per-subset = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The maximum number of endpoints that will be added to an EndpointSlice by the endpointslice-mirroring-controller. More endpoints per slice will result in less endpoint slices, but larger resources. Defaults to 100. (default 1000)";
    };

    concurrent-ephemeralvolume-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of ephemeral volume syncing operations that will be done concurrently. Larger number = faster ephemeral volume updating, but more CPU (and network) load (default 5)";
    };

    concurrent-gc-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of garbage collector workers that are allowed to sync concurrently. (default 20)";
    };

    enable-garbage-collector = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enables the generic garbage collector. MUST be synced with the corresponding flag of the kube-apiserver. (default true)";
    };

    concurrent-horizontal-pod-autoscaler-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of horizontal pod autoscaler objects that are allowed to sync concurrently. Larger number = more responsive horizontal pod autoscaler objects processing, but more CPU (and network) load. (default 5)";
    };

    horizontal-pod-autoscaler-cpu-initialization-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period after pod start when CPU samples might be skipped. (default 5m0s)";
    };

    horizontal-pod-autoscaler-downscale-stabilization = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period for which autoscaler will look backwards and not scale down below any recommendation it made during that period. (default 5m0s)";
    };

    horizontal-pod-autoscaler-initial-readiness-delay = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period after pod start during which readiness changes will be treated as initial readiness. (default 30s)";
    };

    horizontal-pod-autoscaler-sync-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period for syncing the number of pods in horizontal pod autoscaler. (default 15s)";
    };

    horizontal-pod-autoscaler-tolerance = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "The minimum change (from 1.0) in the desired-to-actual metrics ratio for the horizontal pod autoscaler to consider scaling. (default 0.1)";
    };

    concurrent-job-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of job objects that are allowed to sync concurrently. Larger number = more responsive jobs, but more CPU (and network) load (default 5)";
    };

    concurrent-cron-job-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of cron job objects that are allowed to sync concurrently. Larger number = more responsive jobs, but more CPU (and network) load (default 5)";
    };

    legacy-service-account-token-clean-up-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period of time since the last usage of an legacy service account token before it can be deleted. (default 8760h0m0s)";
    };

    concurrent-namespace-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of namespace objects that are allowed to sync concurrently. Larger number = more responsive namespace termination, but more CPU (and network) load (default 10)";
    };

    namespace-sync-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period for syncing namespace life-cycle updates (default 5m0s)";
    };

    node-cidr-mask-size = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Mask size for node cidr in cluster. Default is 24 for IPv4 and 64 for IPv6.";
    };

    node-cidr-mask-size-ipv4 = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Mask size for IPv4 node cidr in dual-stack cluster. Default is 24.";
    };

    node-cidr-mask-size-ipv6 = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Mask size for IPv6 node cidr in dual-stack cluster. Default is 64.";
    };

    service-cluster-ip-range = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "CIDR Range for Services in cluster. Requires --allocate-node-cidrs to be true";
    };

    large-cluster-size-threshold = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Number of nodes from which node-lifecycle-controller treats the cluster as large for the eviction logic purposes. --secondary-node-eviction-rate is implicitly overridden to 0 for clusters this size or smaller. (default 50)";
    };

    node-eviction-rate = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "Number of nodes per second on which pods are deleted in case of node failure when a zone is healthy (see --unhealthy-zone-threshold for definition of healthy/unhealthy). Zone refers to entire cluster in non-multizone clusters. (default 0.1)";
    };

    node-monitor-grace-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Amount of time which we allow running Node to be unresponsive before marking it unhealthy. Must be N times more than kubelet's nodeStatusUpdateFrequency, where N means number of retries allowed for kubelet to post node status. (default 40s)";
    };

    node-startup-grace-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Amount of time which we allow starting Node to be unresponsive before marking it unhealthy. (default 1m0s)";
    };

    secondary-node-eviction-rate = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "Number of nodes per second on which pods are deleted in case of node failure when a zone is unhealthy (see --unhealthy-zone-threshold for definition of healthy/unhealthy). Zone refers to entire cluster in non-multizone clusters. This value is implicitly overridden to 0 if the cluster size is smaller than --large-cluster-size-threshold. (default 0.01)";
    };

    unhealthy-zone-threshold = mkOption {
      type = types.nullOr types.float;
      default = null;
      description = "Fraction of Nodes in a zone which needs to be not Ready (minimum 3) for zone to be treated as unhealthy.  (default 0.55)";
    };

    enable-dynamic-provisioning = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enable dynamic provisioning for environments that support it. (default true)";
    };

    enable-hostpath-provisioner = mkOption {
      type = types.nullOr types.bool;
      default = null;
      description = "Enable HostPath PV provisioning when running without a cloud provider. This allows testing and development of provisioning features.  HostPath provisioning is not supported in any way, won't work in a multi-node cluster, and should not be used for anything other than testing or development.";
    };

    flex-volume-plugin-dir = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Full path of the directory in which the flex volume plugin should search for additional third party volume plugins. (default '/usr/libexec/kubernetes/kubelet-plugins/volume/exec/')";
    };

    pv-recycler-increment-timeout-nfs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The increment of time added per Gi to ActiveDeadlineSeconds for an NFS scrubber pod (default 30)";
    };

    pv-recycler-minimum-timeout-hostpath = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The minimum ActiveDeadlineSeconds to use for a HostPath Recycler pod.  This is for development and testing only and will not work in a multi-node cluster. (default 60)";
    };

    pv-recycler-minimum-timeout-nfs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The minimum ActiveDeadlineSeconds to use for an NFS Recycler pod (default 300)";
    };

    pv-recycler-pod-template-filepath-hostpath = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The file path to a pod definition used as a template for HostPath persistent volume recycling. This is for development and testing only and will not work in a multi-node cluster.";
    };

    pv-recycler-pod-template-filepath-nfs = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "The file path to a pod definition used as a template for NFS persistent volume recycling";
    };

    pv-recycler-timeout-increment-hostpath = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The increment of time added per Gi to ActiveDeadlineSeconds for a HostPath scrubber pod.  This is for development and testing only and will not work in a multi-node cluster. (default 30)";
    };

    pvclaimbinder-sync-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period for syncing persistent volumes and persistent volume claims (default 15s)";
    };

    terminated-pod-gc-threshold = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Number of terminated pods that can exist before the terminated pod garbage collector starts deleting terminated pods. If <= 0, the terminated pod garbage collector is disabled. (default 12500)";
    };

    concurrent-replicaset-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of replica sets that are allowed to sync concurrently. Larger number = more responsive replica management, but more CPU (and network) load (default 5)";
    };

    concurrent-rc-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of replication controllers that are allowed to sync concurrently. Larger number = more responsive replica management, but more CPU (and network) load (default 5)";
    };

    concurrent-resource-quota-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of resource quotas that are allowed to sync concurrently. Larger number = more responsive quota management, but more CPU (and network) load (default 5)";
    };

    resource-quota-sync-period = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The period for syncing quota usage status in the system (default 5m0s)";
    };

    concurrent-serviceaccount-token-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of service account token objects that are allowed to sync concurrently. Larger number = more responsive token generation, but more CPU (and network) load (default 5)";
    };

    root-ca-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "If set, this root certificate authority will be included in service account's token secret. This must be a valid PEM-encoded CA bundle.";
    };

    service-account-private-key-file = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Filename containing a PEM-encoded private RSA or ECDSA key used to sign service account tokens.";
    };

    concurrent-ttl-after-finished-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of ttl-after-finished-controller workers that are allowed to sync concurrently. (default 5)";
    };

    concurrent-validating-admission-policy-status-syncs = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "The number of ValidatingAdmissionPolicyStatusController workers that are allowed to sync concurrently. (default 5)";
    };

    allow-metric-labels = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "stringToString       The map from metric-label to value allow-list of this label. The key's format is <MetricName>,<LabelName>. The value's format is <allowed_value>,<allowed_value>...e.g. metric1,label1='v1,v2,v3', metric1,label2='v1,v2,v3' metric2,label1='v1,v2,v3'. (default [])";
    };

    disabled-metrics = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "This flag provides an escape hatch for misbehaving metrics. You must provide the fully qualified metric name in order to disable it. Disclaimer: disabling metrics is higher in precedence than showing hidden metrics.";
    };

    show-hidden-metrics-for-version = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The previous version for which you want to show hidden metrics. Only the previous minor version is meaningful, other values will not be allowed. The format is <major>.<minor>, e.g.: '1.16'. The purpose of this format is make sure you have the opportunity to notice if the next release hides additional metrics, rather than being surprised when they are permanently removed in the release after that.";
    };

    log-flush-frequency = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "Maximum number of seconds between log flushes (default 5s)";
    };

    log-json-info-buffer-size = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "[Alpha] In JSON format with split output streams, the info messages can be buffered for a while to increase performance. The default value of zero bytes disables buffering. The size can be specified as number of bytes (512), multiples of 1000 (1K), multiples of 1024 (2Ki), or powers of those (3M, 4G, 5Mi, 6Gi). Enable the LoggingAlphaOptions feature gate to use this.";
    };

    log-json-split-stream = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "[Alpha] In JSON format, write error messages to stderr and info messages to stdout. The default is to write a single stream to stdout. Enable the LoggingAlphaOptions feature gate to use this.";
    };

    logging-format = mkOption {
      type = types.nullOr (types.enum [ "json" "text" ]);
      default = null;
      description = "Sets the log format. Permitted formats: 'json' (gated by LoggingBetaOptions), 'text'. (default 'text')";
    };

    v = mkOption {
      type = types.nullOr types.int;
      default = null;
      description = "Number for the log level verbosity";
    };

    vmodule = mkOption {
      type = types.nullOr (types.listOf types.str);
      default = null;
      description = "List of pattern=N settings for file-filtered logging (only works for text log format)";
    };

    kubeconfig = mkOption {
      type = types.nullOr types.path;
      default = null;
      description = "Path to kubeconfig file with authorization and master location information (the master location can be overridden by the master flag).";
    };

    master = mkOption {
      type = types.nullOr types.str;
      default = null;
      description = "The address of the Kubernetes API server (overrides any value in kubeconfig).";
    };
  };

  config = mkIf cfg.enable {
    systemd.services.kube-controller-manager = {
      description = "The Kubernetes controller manager is a daemon that embeds the core control loops shipped with Kubernetes. In applications of robotics and automation, a control loop is a non-terminating loop that regulates the state of the system. In Kubernetes, a controller is a control loop that watches the shared state of the cluster through the apiserver and makes changes attempting to move the current state towards the desired state. Examples of controllers that ship with Kubernetes today are the replication controller, endpoints controller, namespace controller, and serviceaccounts controller.";
      after = [ "network.target" ];
      wantedBy = [ "multi-user.target" ];

      serviceConfig = {
        ExecStart = ''
          ${pkgs.coreutils}/bin/echo ${pkgs.kubernetes}/bin/kube-controller-manager \
              ${optionalString (cfg.contention-profiling != null) "--contention-profiling"} \
            ${optionalString (cfg.profiling != null) "--profiling ${boolToString cfg.profiling}"} \
            ${optionalString (cfg.enable-leader-migration != null) "--enable-leader-migration"} \
            ${optionalString (cfg.leader-migration-config != null) "--leader-migration-config ${cfg.leader-migration-config}"} \
            ${optionalString (cfg.allocate-node-cidrs != null) "--allocate-node-cidrs ${boolToString cfg.allocate-node-cidrs}"} \
            ${optionalString (cfg.cidr-allocator-type != null) "--cidr-allocator-type ${toString cfg.cidr-allocator-type}"} \
            ${optionalString (cfg.cloud-config != null) "--cloud-config ${cfg.cloud-config}"} \
            ${optionalString (cfg.cloud-provider != null) "--cloud-provider ${cfg.cloud-provider}"} \
            ${optionalString (cfg.cluster-cidr != null) "--cluster-cidr ${cfg.cluster-cidr}"} \
            ${optionalString (cfg.cluster-name != null) "--cluster-name ${toString cfg.cluster-name}"} \
            ${optionalString (cfg.configure-cloud-routes != null) "--configure-cloud-routes ${boolToString cfg.configure-cloud-routes}"} \
            ${optionalString (cfg.controller-start-interval != null) "--controller-start-interval ${cfg.controller-start-interval}"} \
            ${optionalString (cfg.controllers != null) "--controllers \"${concatStringsSep "," cfg.controllers}\""} \
            ${optionalString (cfg.external-cloud-volume-plugin != null) "--external-cloud-volume-plugin ${cfg.external-cloud-volume-plugin}"} \
            ${optionalString (cfg.feature-gates != null) "--feature-gates \"${concatStringsSep "," cfg.feature-gates}\""} \
            ${optionalString (cfg.kube-api-burst != null) "--kube-api-burst ${toString cfg.kube-api-burst}"} \
            ${optionalString (cfg.kube-api-content-type != null) "--kube-api-content-type ${cfg.kube-api-content-type}"} \
            ${optionalString (cfg.kube-api-qps != null) "--kube-api-qps ${toString cfg.kube-api-qps}"} \
            ${optionalString (cfg.leader-elect != null) "--leader-elect ${boolToString cfg.leader-elect}"} \
            ${optionalString (cfg.leader-elect-lease-duration != null) "--leader-elect-lease-duration ${cfg.leader-elect-lease-duration}"} \
            ${optionalString (cfg.leader-elect-renew-deadline != null) "--leader-elect-renew-deadline ${cfg.leader-elect-renew-deadline}"} \
            ${optionalString (cfg.leader-elect-resource-lock != null) "--leader-elect-resource-lock ${toString cfg.leader-elect-resource-lock}"} \
            ${optionalString (cfg.leader-elect-resource-name != null) "--leader-elect-resource-name ${cfg.leader-elect-resource-name}"} \
            ${optionalString (cfg.leader-elect-resource-namespace != null) "--leader-elect-resource-namespace ${cfg.leader-elect-resource-namespace}"} \
            ${optionalString (cfg.leader-elect-retry-period != null) "--leader-elect-retry-period ${cfg.leader-elect-retry-period}"} \
            ${optionalString (cfg.min-resync-period != null) "--min-resync-period ${cfg.min-resync-period}"} \
            ${optionalString (cfg.node-monitor-period != null) "--node-monitor-period ${cfg.node-monitor-period}"} \
            ${optionalString (cfg.route-reconciliation-period != null) "--route-reconciliation-period ${cfg.route-reconciliation-period}"} \
            ${optionalString (cfg.use-service-account-credentials != null) "--use-service-account-credentials ${boolToString cfg.use-service-account-credentials}"} \
            ${optionalString (cfg.concurrent-service-syncs != null) "--concurrent-service-syncs ${toString cfg.concurrent-service-syncs}"} \
            ${optionalString (cfg.bind-address != null) "--bind-address ${cfg.bind-address}"} \
            ${optionalString (cfg.cert-dir != null) "--cert-dir ${toString cfg.cert-dir}"} \
            ${optionalString (cfg.http2-max-streams-per-connection != null) "--http2-max-streams-per-connection ${toString cfg.http2-max-streams-per-connection}"} \
            ${optionalString (cfg.permit-address-sharing != null) "--permit-address-sharing ${boolToString cfg.permit-address-sharing}"} \
            ${optionalString (cfg.permit-port-sharing != null) "--permit-port-sharing ${boolToString cfg.permit-port-sharing}"} \
            ${optionalString (cfg.secure-port != null) "--secure-port ${toString cfg.secure-port}"} \
            ${optionalString (cfg.tls-cert-file != null) "--tls-cert-file ${toString cfg.tls-cert-file}"} \
            ${optionalString (cfg.cert-dir != null) "--cert-dir ${toString cfg.cert-dir}"} \
            ${optionalString (cfg.tls-cipher-suites != null) "--tls-cipher-suites \"${concatStringsSep "," cfg.tls-cipher-suites}\""} \
            ${optionalString (cfg.tls-min-version != null) "--tls-min-version ${toString cfg.tls-min-version}"} \
            ${optionalString (cfg.tls-private-key-file != null) "--tls-private-key-file ${toString cfg.tls-private-key-file}"} \
            ${optionalString (cfg.tls-sni-cert-key != null) "--tls-sni-cert-key \"${concatStringsSep "," cfg.tls-sni-cert-key}\""} \
            ${optionalString (cfg.authentication-kubeconfig != null) "--authentication-kubeconfig ${toString cfg.authentication-kubeconfig}"} \
            ${optionalString (cfg.authentication-skip-lookup != null) "--authentication-skip-lookup ${boolToString cfg.authentication-skip-lookup}"} \
            ${optionalString (cfg.authentication-token-webhook-cache-ttl != null) "--authentication-token-webhook-cache-ttl ${toString cfg.authentication-token-webhook-cache-ttl}"} \
            ${optionalString (cfg.authentication-tolerate-lookup-failure != null) "--authentication-tolerate-lookup-failure ${boolToString cfg.authentication-tolerate-lookup-failure}"} \
            ${optionalString (cfg.authentication-tolerate-lookup-failure != null) "--authentication-tolerate-lookup-failure ${toString cfg.authentication-tolerate-lookup-failure}"} \
            ${optionalString (cfg.client-ca-file != null) "--client-ca-file ${toString cfg.client-ca-file}"} \
            ${optionalString (cfg.requestheader-allowed-names != null) "--requestheader-allowed-names \"${concatStringsSep "," cfg.requestheader-allowed-names}\""} \
            ${optionalString (cfg.requestheader-client-ca-file != null) "--requestheader-client-ca-file ${toString cfg.requestheader-client-ca-file}"} \
              ${optionalString (cfg.requestheader-extra-headers-prefix != null) "--requestheader-extra--headers-prefix \"${concatStrigsSep ","  cfg.requestheader-extra-headers-prefix}\""} \
            ${optionalString (cfg.requestheader-group-headers != null) "--requestheader-group-headers \"${concatStrigsSep ","  cfg.requestheader-group-headers}\""} \
            ${optionalString (cfg.requestheader-username-headers != null) "--requestheader-username-headers \"${concatStrigsSep ","  cfg.requestheader-username-headers}\""} \
            ${optionalString (cfg.requestheader-client-ca-file != null) "--requestheader-client-ca-file ${toString cfg.requestheader-client-ca-file}"} \
            ${optionalString (cfg.requestheader-username-headers != null) "--requestheader-username-headers ${toString cfg.requestheader-username-headers}"} \
            ${optionalString (cfg.requestheader-extra-headers-prefix != null) "--requestheader-extra-headers-prefix ${toString cfg.requestheader-extra-headers-prefix}"} \
            ${optionalString (cfg.requestheader-group-headers != null) "--requestheader-group-headers ${toString cfg.requestheader-group-headers}"} \
            ${optionalString (cfg.authorization-always-allow-paths != null) "--authorization-always-allow-paths \"${concatStringsSep "," cfg.authorization-always-allow-paths}\""} \
            ${optionalString (cfg.authorization-kubeconfig != null) "--authorization-kubeconfig ${toString cfg.authorization-kubeconfig}"} \
            ${optionalString (cfg.authorization-webhook-cache-authorized-ttl != null) "--authorization-webhook-cache-authorized-ttl ${toString cfg.authorization-webhook-cache-authorized-ttl}"} \
            ${optionalString (cfg.authorization-webhook-cache-unauthorized-ttl != null) "--authorization-webhook-cache-unauthorized-ttl ${toString cfg.authorization-webhook-cache-unauthorized-ttl}"} \
            ${optionalString (cfg.attach-detach-reconcile-sync-period != null) "--attach-detach-reconcile-sync-period ${toString cfg.attach-detach-reconcile-sync-period}"} \
            ${optionalString (cfg.disable-attach-detach-reconcile-sync != null) "--disable-attach-detach-reconcile-sync"} \
            ${optionalString (cfg.cluster-signing-cert-file != null) "--cluster-signing-cert-file ${toString cfg.cluster-signing-cert-file}"} \
            ${optionalString (cfg.cluster-signing-duration != null) "--cluster-signing-duration ${toString cfg.cluster-signing-duration}"} \
            ${optionalString (cfg.cluster-signing-key-file != null) "--cluster-signing-key-file ${toString cfg.cluster-signing-key-file}"} \
            ${optionalString (cfg.cluster-signing-kube-apiserver-client-cert-file != null) "--cluster-signing-kube-apiserver-client-cert-file ${toString cfg.cluster-signing-kube-apiserver-client-cert-file}"} \
            ${optionalString (cfg.cluster-signing-kube-apiserver-client-key-file != null) "--cluster-signing-kube-apiserver-client-key-file ${toString cfg.cluster-signing-kube-apiserver-client-key-file}"} \
            ${optionalString (cfg.cluster-signing-kubelet-client-cert-file != null) "--cluster-signing-kubelet-client-cert-file ${toString cfg.cluster-signing-kubelet-client-cert-file}"} \
            ${optionalString (cfg.cluster-signing-kubelet-client-key-file != null) "--cluster-signing-kubelet-client-key-file ${toString cfg.cluster-signing-kubelet-client-key-file}"} \
            ${optionalString (cfg.cluster-signing-kubelet-serving-cert-file != null) "--cluster-signing-kubelet-serving-cert-file ${toString cfg.cluster-signing-kubelet-serving-cert-file}"} \
            ${optionalString (cfg.cluster-signing-kubelet-serving-key-file != null) "--cluster-signing-kubelet-serving-key-file ${toString cfg.cluster-signing-kubelet-serving-key-file}"} \
            ${optionalString (cfg.cluster-signing-legacy-unknown-cert-file != null) "--cluster-signing-legacy-unknown-cert-file ${toString cfg.cluster-signing-legacy-unknown-cert-file}"} \
            ${optionalString (cfg.cluster-signing-legacy-unknown-key-file != null) "--cluster-signing-legacy-unknown-key-file ${toString cfg.cluster-signing-legacy-unknown-key-file}"} \
            ${optionalString (cfg.concurrent-deployment-syncs != null) "--concurrent-deployment-syncs ${toString cfg.concurrent-deployment-syncs}"} \
            ${optionalString (cfg.concurrent-statefulset-syncs != null) "--concurrent-statefulset-syncs ${toString cfg.concurrent-statefulset-syncs}"} \
            ${optionalString (cfg.concurrent-endpoint-syncs != null) "--concurrent-endpoint-syncs ${toString cfg.concurrent-endpoint-syncs}"} \
            ${optionalString (cfg.endpoint-updates-batch-period != null) "--endpoint-updates-batch-period ${toString cfg.endpoint-updates-batch-period}"} \
            ${optionalString (cfg.concurrent-service-endpoint-syncs != null) "--concurrent-service-endpoint-syncs ${toString cfg.concurrent-service-endpoint-syncs}"} \
            ${optionalString (cfg.endpointslice-updates-batch-period != null) "--endpointslice-updates-batch-period ${toString cfg.endpointslice-updates-batch-period}"} \
            ${optionalString (cfg.max-endpoints-per-slice != null) "--max-endpoints-per-slice ${toString cfg.max-endpoints-per-slice}"} \
            ${optionalString (cfg.mirroring-concurrent-service-endpoint-syncs != null) "--mirroring-concurrent-service-endpoint-syncs ${toString cfg.mirroring-concurrent-service-endpoint-syncs}"} \
            ${optionalString (cfg.mirroring-endpointslice-updates-batch-period != null) "--mirroring-endpointslice-updates-batch-period ${toString cfg.mirroring-endpointslice-updates-batch-period}"} \
            ${optionalString (cfg.mirroring-max-endpoints-per-subset != null) "--mirroring-max-endpoints-per-subset ${toString cfg.mirroring-max-endpoints-per-subset}"} \
            ${optionalString (cfg.concurrent-ephemeralvolume-syncs != null) "--concurrent-ephemeralvolume-syncs ${toString cfg.concurrent-ephemeralvolume-syncs}"} \
            ${optionalString (cfg.concurrent-gc-syncs != null) "--concurrent-gc-syncs ${toString cfg.concurrent-gc-syncs}"} \
            ${optionalString (cfg.enable-garbage-collector != null) "--enable-garbage-collector ${boolToString cfg.enable-garbage-collector}"} \
            ${optionalString (cfg.concurrent-horizontal-pod-autoscaler-syncs != null) "--concurrent-horizontal-pod-autoscaler-syncs ${toString cfg.concurrent-horizontal-pod-autoscaler-syncs}"} \
            ${optionalString (cfg.horizontal-pod-autoscaler-cpu-initialization-period != null) "--horizontal-pod-autoscaler-cpu-initialization-period ${toString cfg.horizontal-pod-autoscaler-cpu-initialization-period}"} \
            ${optionalString (cfg.horizontal-pod-autoscaler-downscale-stabilization != null) "--horizontal-pod-autoscaler-downscale-stabilization ${toString cfg.horizontal-pod-autoscaler-downscale-stabilization}"} \
            ${optionalString (cfg.horizontal-pod-autoscaler-initial-readiness-delay != null) "--horizontal-pod-autoscaler-initial-readiness-delay ${toString cfg.horizontal-pod-autoscaler-initial-readiness-delay}"} \
            ${optionalString (cfg.horizontal-pod-autoscaler-sync-period != null) "--horizontal-pod-autoscaler-sync-period ${toString cfg.horizontal-pod-autoscaler-sync-period}"} \
            ${optionalString (cfg.horizontal-pod-autoscaler-tolerance != null) "--horizontal-pod-autoscaler-tolerance ${toString cfg.horizontal-pod-autoscaler-tolerance}"} \
            ${optionalString (cfg.concurrent-job-syncs != null) "--concurrent-job-syncs ${toString cfg.concurrent-job-syncs}"} \
            ${optionalString (cfg.concurrent-cron-job-syncs != null) "--concurrent-cron-job-syncs ${toString cfg.concurrent-cron-job-syncs}"} \
            ${optionalString (cfg.legacy-service-account-token-clean-up-period != null) "--legacy-service-account-token-clean-up-period ${toString cfg.legacy-service-account-token-clean-up-period}"} \
            ${optionalString (cfg.concurrent-namespace-syncs != null) "--concurrent-namespace-syncs ${toString cfg.concurrent-namespace-syncs}"} \
            ${optionalString (cfg.namespace-sync-period != null) "--namespace-sync-period ${toString cfg.namespace-sync-period}"} \
            ${optionalString (cfg.node-cidr-mask-size != null) "--node-cidr-mask-size ${toString cfg.node-cidr-mask-size}"} \
            ${optionalString (cfg.node-cidr-mask-size-ipv4 != null) "--node-cidr-mask-size-ipv4 ${toString cfg.node-cidr-mask-size-ipv4}"} \
            ${optionalString (cfg.node-cidr-mask-size-ipv6 != null) "--node-cidr-mask-size-ipv6 ${toString cfg.node-cidr-mask-size-ipv6}"} \
            ${optionalString (cfg.service-cluster-ip-range != null) "--service-cluster-ip-range ${toString cfg.service-cluster-ip-range}"} \
            ${optionalString (cfg.large-cluster-size-threshold != null) "--large-cluster-size-threshold ${toString cfg.large-cluster-size-threshold}"} \
            ${optionalString (cfg.node-eviction-rate != null) "--node-eviction-rate ${toString cfg.node-eviction-rate}"} \
            ${optionalString (cfg.node-monitor-grace-period != null) "--node-monitor-grace-period ${toString cfg.node-monitor-grace-period}"} \
            ${optionalString (cfg.node-startup-grace-period != null) "--node-startup-grace-period ${toString cfg.node-startup-grace-period}"} \
            ${optionalString (cfg.secondary-node-eviction-rate != null) "--secondary-node-eviction-rate ${toString cfg.secondary-node-eviction-rate}"} \
            ${optionalString (cfg.unhealthy-zone-threshold != null) "--unhealthy-zone-threshold ${toString cfg.unhealthy-zone-threshold}"} \
            ${optionalString (cfg.enable-dynamic-provisioning != null) "--enable-dynamic-provisioning ${boolToString cfg.enable-dynamic-provisioning}"} \
            ${optionalString (cfg.enable-hostpath-provisioner != null) "--enable-hostpath-provisioner"} \
            ${optionalString (cfg.flex-volume-plugin-dir != null) "--flex-volume-plugin-dir ${toString cfg.flex-volume-plugin-dir}"} \
            ${optionalString (cfg.pv-recycler-increment-timeout-nfs != null) "--pv-recycler-increment-timeout-nfs ${toString cfg.pv-recycler-increment-timeout-nfs}"} \
            ${optionalString (cfg.pv-recycler-minimum-timeout-hostpath != null) "--pv-recycler-minimum-timeout-hostpath ${toString cfg.pv-recycler-minimum-timeout-hostpath}"} \
            ${optionalString (cfg.pv-recycler-minimum-timeout-nfs != null) "--pv-recycler-minimum-timeout-nfs ${toString cfg.pv-recycler-minimum-timeout-nfs}"} \
            ${optionalString (cfg.pv-recycler-pod-template-filepath-hostpath != null) "--pv-recycler-pod-template-filepath-hostpath ${toString cfg.pv-recycler-pod-template-filepath-hostpath}"} \
            ${optionalString (cfg.pv-recycler-pod-template-filepath-nfs != null) "--pv-recycler-pod-template-filepath-nfs ${toString cfg.pv-recycler-pod-template-filepath-nfs}"} \
            ${optionalString (cfg.pv-recycler-timeout-increment-hostpath != null) "--pv-recycler-timeout-increment-hostpath ${toString cfg.pv-recycler-timeout-increment-hostpath}"} \
            ${optionalString (cfg.pvclaimbinder-sync-period != null) "--pvclaimbinder-sync-period ${toString cfg.pvclaimbinder-sync-period}"} \
            ${optionalString (cfg.terminated-pod-gc-threshold != null) "--terminated-pod-gc-threshold ${toString cfg.terminated-pod-gc-threshold}"} \
            ${optionalString (cfg.concurrent-replicaset-syncs != null) "--concurrent-replicaset-syncs ${toString cfg.concurrent-replicaset-syncs}"} \
            ${optionalString (cfg.concurrent-rc-syncs != null) "--concurrent-rc-syncs ${toString cfg.concurrent-rc-syncs}"} \
            ${optionalString (cfg.concurrent-resource-quota-syncs != null) "--concurrent-resource-quota-syncs ${toString cfg.concurrent-resource-quota-syncs}"} \
            ${optionalString (cfg.resource-quota-sync-period != null) "--resource-quota-sync-period ${toString cfg.resource-quota-sync-period}"} \
            ${optionalString (cfg.concurrent-serviceaccount-token-syncs != null) "--concurrent-serviceaccount-token-syncs ${toString cfg.concurrent-serviceaccount-token-syncs}"} \
            ${optionalString (cfg.root-ca-file != null) "--root-ca-file ${toString cfg.root-ca-file}"} \
            ${optionalString (cfg.service-account-private-key-file != null) "--service-account-private-key-file ${toString cfg.service-account-private-key-file}"} \
            ${optionalString (cfg.concurrent-ttl-after-finished-syncs != null) "--concurrent-ttl-after-finished-syncs ${toString cfg.concurrent-ttl-after-finished-syncs}"} \
            ${optionalString (cfg.concurrent-validating-admission-policy-status-syncs != null) "--concurrent-validating-admission-policy-status-syncs ${toString cfg.concurrent-validating-admission-policy-status-syncs}"} \
            ${optionalString (cfg.allow-metric-labels != null) "--allow-metric-labels \"${concatStringsSep "," cfg.allow-metric-labels}\""} \
            ${optionalString (cfg.disabled-metrics != null) "--disabled-metrics \"${concatStringsSep "," cfg.disabled-metrics}\""} \
            ${optionalString (cfg.show-hidden-metrics-for-version != null) "--show-hidden-metrics-for-version ${toString cfg.show-hidden-metrics-for-version}"} \
            ${optionalString (cfg.log-flush-frequency != null) "--log-flush-frequency ${toString cfg.log-flush-frequency}"} \
            ${optionalString (cfg.log-json-info-buffer-size != null) "--log-json-info-buffer-size ${toString cfg.log-json-info-buffer-size}"} \
            ${optionalString (cfg.log-json-split-stream != null) "--log-json-split-stream ${toString cfg.log-json-split-stream}"} \
            ${optionalString (cfg.logging-format != null) "--logging-format ${toString cfg.logging-format}"} \
            ${optionalString (cfg.v != null) "--v ${toString cfg.v}"} \
            ${optionalString (cfg.vmodule != null) "--vmodule \"${concatStringsSep "," cfg.vmodule}\""} \
            ${optionalString (cfg.kubeconfig != null) "--kubeconfig ${toString cfg.kubeconfig}"} \
            ${optionalString (cfg.master != null) "--master ${toString cfg.master}"}
        '';
      };
    };
  };
}
#+end_src
